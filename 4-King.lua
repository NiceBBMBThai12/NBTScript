do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v31=0;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v31==(1598 -(588 + 1008))) then v36=nil;v37=nil;v31=1637 -(847 + 787) ;end if (v31~=(0 -0)) then else v32=0 -0 ;v33=nil;v31=1;end if ((1557 -(606 + 948))==v31) then v38=nil;v39=nil;v31=4 + 0 ;end if (v31~=(8 -4)) then else while true do if ((1262 -(265 + 996))==v32) then local v92=0;while true do if (v92==1) then v32=2;break;end if (v92==(1521 -(517 + 1004))) then v35=nil;v36=nil;v92=1;end end end if (v32==3) then v39=nil;while true do if (1==v33) then local v102=0;while true do if (v102~=(0 + 0)) then else v38=v24();v39={};v102=1383 -(606 + 776) ;end if (v102==(1 + 1)) then v33=4 -2 ;break;end if ((674 -(544 + 129))~=v102) then else for v116=2 -1 ,v38 do local v117=0 -0 ;local v118;local v119;local v120;while true do if (v117==(1 + 0)) then v120=nil;while true do if (v118==(0 -0)) then v119=v22();v120=nil;v118=1;end if (1==v118) then if (v119==(1028 -(998 + 29))) then v120=v22()~=0 ;elseif (v119==(813 -(578 + 233))) then v120=v25();elseif (v119~=(11 -8)) then else v120=v26();end v39[v116]=v120;break;end end break;end if (v117~=(0 + 0)) then else v118=0 -0 ;v119=nil;v117=1 + 0 ;end end end v37[3]=v22();v102=2 + 0 ;end end end if ((1370 -(315 + 1053))~=v33) then else for v104=1 -0 ,v24() do local v105=1024 -(547 + 477) ;local v106;local v107;local v108;local v109;while true do if (v105~=(0 -0)) then else v106=0 -0 ;v107=nil;v105=1 -0 ;end if (v105==(2 + 0)) then while true do if (v106~=(1964 -(388 + 1576))) then else local v123=0 + 0 ;while true do if (v123==(1 + 0)) then v106=522 -(97 + 424) ;break;end if (v123==(0 + 0)) then v107=0;v108=nil;v123=2 -1 ;end end end if (v106~=1) then else v109=nil;while true do if (v107==(0 -0)) then local v125=0 + 0 ;local v126;while true do if (v125==(0 + 0)) then v126=0 + 0 ;while true do if (v126==(3 -2)) then v107=54 -(24 + 29) ;break;end if (v126==(0 -0)) then v108=0 -0 ;v109=nil;v126=1;end end break;end end end if (v107==1) then while true do if (v108~=(0 + 0)) then else v109=v22();if (v21(v109,1634 -(1148 + 485) ,1 + 0 )==(0 + 0)) then local v179=0 -0 ;local v180;local v181;local v182;local v183;while true do if (v179~=(0 -0)) then else v180=0 + 0 ;v181=nil;v179=1 + 0 ;end if ((1 + 0)==v179) then v182=nil;v183=nil;v179=2;end if (v179~=(1 + 1)) then else while true do if (v180==(83 -(47 + 33))) then if (v21(v182,838 -(71 + 764) ,1454 -(106 + 1345) )~=(1 + 0)) then else v183[1072 -(475 + 593) ]=v39[v183[4]];end v34[v104]=v183;break;end if (v180~=(1 + 1)) then else local v288=0 -0 ;while true do if (v288~=(0 -0)) then else if (v21(v182,1,1143 -(357 + 785) )~=1) then else v183[796 -(635 + 159) ]=v39[v183[1 + 1 ]];end if (v21(v182,5 -3 ,2)~=(1 + 0)) then else v183[3]=v39[v183[4 -1 ]];end v288=1 -0 ;end if (v288==1) then v180=9 -6 ;break;end end end if (v180~=1) then else local v289=1313 -(816 + 497) ;local v290;while true do if ((0 -0)~=v289) then else v290=665 -(84 + 581) ;while true do if (v290~=1) then else v180=1 + 1 ;break;end if (v290==(0 + 0)) then v183={v23(),v23(),nil,nil};if (v181==(1526 -(1408 + 118))) then local v341=0;local v342;local v343;while true do if (v341~=(0 -0)) then else local v360=0 + 0 ;while true do if (1~=v360) then else v341=700 -(380 + 319) ;break;end if (v360==0) then v342=525 -(336 + 189) ;v343=nil;v360=1 -0 ;end end end if (v341==1) then while true do if (0==v342) then v343=0 + 0 ;while true do if (v343==0) then v183[6 -3 ]=v23();v183[1210 -(57 + 1149) ]=v23();break;end end break;end end break;end end elseif (v181==1) then v183[2 + 1 ]=v24();elseif (v181==(2 + 0)) then v183[156 -(104 + 49) ]=v24() -(2^(514 -(327 + 171))) ;elseif (v181==(1950 -(1153 + 794))) then local v367=0;local v368;while true do if (v367~=0) then else v368=1253 -(1210 + 43) ;while true do if (v368==(519 -(190 + 329))) then v183[3 + 0 ]=v24() -(2^(37 -21)) ;v183[642 -(194 + 444) ]=v23();break;end end break;end end end v290=2 -1 ;end end break;end end end if (v180~=0) then else v181=v21(v109,2 + 0 ,3);v182=v21(v109,11 -7 ,6);v180=1 -0 ;end end break;end end end break;end end break;end end break;end end break;end if (v105~=(1 + 0)) then else v108=nil;v109=nil;v105=2 + 0 ;end end end for v110=1225 -(703 + 521) ,v24() do v35[v110-(794 -(290 + 503)) ]=v29();end for v112=1 + 0 ,v24() do v36[v112]=v24();end return v37;end if (v33==(0 + 0)) then local v103=665 -(440 + 225) ;while true do if (v103==1) then v36={};v37={v34,v35,nil,v36};v103=1 + 1 ;end if (v103==(1154 -(862 + 290))) then v33=1;break;end if (v103~=(0 -0)) then else v34={};v35={};v103=1 + 0 ;end end end end break;end if (v32==2) then v37=nil;v38=nil;v32=11 -8 ;end if (v32~=(0 -0)) then else v33=0;v34=nil;v32=1;end end break;end if (v31==(511 -(439 + 71))) then v34=nil;v35=nil;v31=1874 -(147 + 1725) ;end end end v18=5;end if (v18==3) then function v25()local v40=v24();local v41=v24();local v42=1;local v43=(v21(v41,2 -1 ,(47 + 30) -57 ) * (2^(92 -60))) + v40 ;local v44=v21(v41,64 -(128 -85) ,27 + 4 );local v45=((v21(v41,30 + 2 )==(1 + 0)) and  -(161 -(40 + 120))) or 1 ;if (v44==(0 + 0)) then if (v43==(1111 -(148 + 963))) then return v45 * (0 + 0) ;else local v81=0 + (0 -0) ;while true do if (v81==(0 + 0 + 0)) then v44=1;v42=0 -0 ;break;end end end elseif (v44==(1527 + 520)) then return ((v43==0) and (v45 * (((8 + 3) -(9 + 1))/(0 + 0)))) or (v45 * NaN) ;end return v8(v45,v44-(14 + 1009) ) * (v42 + (v43/(2^52))) ;end v26=nil;function v26(v46)local v47;if  not v46 then v46=v24();if (v46==(920 -(646 + 274))) then return "";end end v47=v3(v16,v19,(v19 + v46) -(28 -(19 + 8)) );v19=v19 + v46 ;local v48={};for v68=1, #v47 do v48[v68]=v2(v1(v3(v47,v68,v68)));end return v6(v48);end v27=v24;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v49)if (v1(v49,2)==79) then v20=v0(v3(v49,1,1));return "";else local v76=0;local v77;while true do if (v76==0) then v77=v2(v0(v49,16));if v20 then local v97=v5(v77,v20);v20=nil;return v97;else return v77;end break;end end end end);v21=nil;v18=1;end if (v18==5) then v30=nil;function v30(v50,v51,v52)local v53=v50[1];local v54=v50[2];local v55=v50[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==3) then A,B=v28(v11(v75));if  not A[1] then local v93=v50[4][v71] or "?" ;error("Script error at ["   .. v93   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v70==1) then v73={...};v74=v12("#",...) -1 ;v70=2;end if (v70==0) then v71=1;v72= -1;v70=1;end if (v70==2) then v75=nil;function v75()local v82=v53;local v83=v54;local v84=v55;local v85=v28;local v86={};local v87={};local v88={};for v94=0 + 0 + 0 ,v74 do if (((3335 -(468 + 648))>=(1585 -503)) and (v94>=v84)) then v86[v94-v84 ]=v73[v94 + 1 + 0 ];else v88[v94]=v73[v94 + (3 -(2 + 0)) ];end end local v89=(v74-v84) + 1 + 0 + (903 -(271 + 632)) ;local v90;local v91;while true do local v95=391 -(301 + 90) ;local v96;while true do if ((v95==(0 -0)) or ((86 + 3417)<(1120 + 2263))) then v96=0 -0 ;while true do if ((1131<=((473 + 1652) -((79 -42) + 692 + 88))) and (v96==(1 + 0))) then if (((8206 -6121)<4692) and (v91<=20)) then if ((v91<=(24 -15)) or ((6743 -4897)==3363)) then if (((554 + 2602)<(14845 -(18973 -8682))) and (v91<=4)) then if ((v91<=(1824 -(629 + 1194))) or (((1477 -571) + 1918)<((4591 -(1322 + 600)) -(347 + 1383)))) then if (((1049 + 716)>(317 -251)) and (v91==(808 -(98 + 710)))) then v88[v90[1317 -(1304 + 11) ]][v90[116 -(80 + 33) ]]=v90[4];else local v129=0 -0 ;local v130;local v131;while true do if (((1626 -(6 + 272))==(2918 -(1436 + 134))) and (v129==1)) then while true do if ((v130==(422 -(412 + 10))) or ((5218 -(187 + 83))==(2377 -1343))) then v131=v90[(11 -5) -4 ];v88[v131](v88[v131 + 1 + 0 ]);break;end end break;end if (((17062 -13545)==(11993 -8476)) and (v129==((0 -0) -0))) then v130=0 -(0 + 0) ;v131=nil;v129=1;end end end elseif (((593 + 1809)<(5632 -2936)) and (v91<=(7 -5))) then local v132=0 + 0 ;local v133;local v134;local v135;local v136;local v137;while true do if ((v132==(177 -(97 + 80))) or ((2507 -(568 + 259 + 972))<=(1180 -477))) then v133=0 -0 ;v134=nil;v132=1;end if (((2754 -(677 + 603))>782) and (v132==(1329 -(548 + 780)))) then v135=nil;v136=nil;v132=2;end if ((2==v132) or ((768 -(257 + 325))>=(43 + 663))) then v137=nil;while true do if ((1575==(2649 -(548 + 526))) and (v133==((1085 -(560 + 524)) + 0))) then local v259=1725 -(1571 + 154) ;local v260;while true do if ((3649>=(2318 -584)) and (((0 -0) -0)==v259)) then v260=0 -0 ;while true do if (((4253 -(373 + 575))>=(4108 -(133 + 737))) and (v260==0)) then local v328=0 -0 ;while true do if (((3590 + 1249)>(1522 -512)) and ((3 -2)==v328)) then v260=1 + 0 ;break;end if ((v328==(0 + 0)) or (448>=(3337 -(797 + 347)))) then v72=(v136 + v134) -(2 -1) ;v137=0 + 0 ;v328=(4050 -2666) -(1103 + 280) ;end end end if ((2169<=2547) and ((1 -0)==v260)) then v133=1527 -(1215 + 310) ;break;end end break;end end end if (((0 + 0)==v133) or (1598==1030)) then local v261=0 -0 ;while true do if ((1780==(791 + 989)) and (v261==1)) then v133=1 + 0 + 0 ;break;end if ((v261==(0 -0)) or (4679==(8903 -5776))) then v134=v90[926 -(850 + 74) ];v135,v136=v85(v88[v134](v13(v88,v134 + 1 ,v90[3])));v261=1 + 0 ;end end end if (((2068 -1541)<((3035 + 452) -(75 + 45))) and (v133==((2860 -1884) -(51 + 923)))) then for v278=v134,v72 do local v279=0 + 0 ;local v280;while true do if ((0==v279) or ((1885 + 1175)<(500 + 713))) then v280=0 -(1538 -(1389 + 149)) ;while true do if ((v280==(0 + 0)) or (((3563 -(421 + 483)) + 679 + 952)<(266 + 1693))) then v137=v137 + (1433 -(1281 + 151)) ;v88[v278]=v135[v137];break;end end break;end end end break;end end break;end end elseif (((17837 -13329)>82) and (v91>(988 -((1252 -(337 + 188)) + 258)))) then local v184=0 -0 ;local v185;while true do if (((603 -(351 + 252))==v184) or ((4587 + 386)<=(5592 -3319))) then v185=v90[936 -(351 + 583) ];v88[v185]=v88[v185](v13(v88,v185 + 1 ,v90[1944 -(988 + 953) ]));break;end end else local v186=0;local v187;while true do if (((4764 -(196 + 626))>(1243 -715)) and (v186==(0 -0))) then v187=v90[(400 -(120 + 274)) -4 ];do return v13(v88,v187,v72);end break;end end end elseif (((13561 -8728)>(1726 -1118)) and (v91<=6)) then if ((v91>5) or (((23085 -16775) -(1180 + 175))<(345 + 1402))) then local v138=930 -((1499 -962) + 393) ;local v139;local v140;local v141;local v142;while true do if (((2568 -(1819 + 120))<(1219 -(111 + 356))) and (v138==(781 -(624 + 155)))) then while true do if (((4956 -2479)<=(11367 -(9433 -(771 + 697)))) and (v139==(0 + 0))) then local v262=1181 -(206 + 975) ;while true do if (((1 + 0)==v262) or ((4588 -(2075 -(250 + 764)))==(1 + 18 + 767))) then v139=1 -(1147 -(496 + 651)) ;break;end if (((4959 -2606)==(2689 -(146 + 190))) and ((0 + (1064 -(965 + 99)))==v262)) then local v299=0 + 0 ;while true do if ((v299==(755 -(56 + 699))) or ((1254 -414)>(2415 -(248 + 52 + 24 + 180)))) then v140=v90[(1113 -(130 + 982)) + 1 ];v141={v88[v140](v88[v140 + (1899 -((824 -265) + (2798 -(751 + 708)))) ])};v299=421 -(183 + 237) ;end if (((4674 -(48 + 948))<(3667 + 1056)) and (v299==(681 -(235 + 445)))) then v262=1 -0 ;break;end end end end end if ((v139==1) or ((2091 + 2892)<(3037 -956))) then v142=(0 -0) + 0 ;for v281=v140,v90[4] do local v282=846 -(402 + 444) ;while true do if ((v282==0) or (((7488 -3261) -(4814 -2857))==(989 + 2011))) then v142=v142 + (1 -0) ;v88[v281]=v141[v142];break;end end end break;end end break;end if (((2333 -(24 + (661 -513)))<=(7986 -4863)) and (v138==((1969 -(1088 + 880)) + 0))) then v141=nil;v142=nil;v138=1 + (4 -3) ;end if ((v138==(0 + 0)) or ((2326 + 509 + 710)>(1211 + 2671))) then local v231=0 -0 ;while true do if ((v231==((0 -0) -0)) or ((2615 + 546)>3683)) then v139=1986 -(1840 + 146) ;v140=nil;v231=1;end if (((405 + 241)>=(169 + 143)) and ((1919 -(937 + 981))==v231)) then v138=1860 -(1038 + 821) ;break;end end end end else v88[v90[1090 -((725 -(89 + 245)) + 697) ]]=v88[v90[3 -0 ]][v90[5 -1 ]];end elseif ((3982==(5547 -(831 + 734))) and (v91<=(5 + 2))) then v71=v90[699 -(403 + 293) ];elseif ((v91>(1 + 7)) or (((2043 + 3008) -2697)>((1016 -(250 + 14)) + 3556))) then v88[v90[1 + 1 ]]=v51[v90[15 -(8 + 4) ]];else v88[v90[2]][v90[1679 -(871 + 510 + 295) ]]=v88[v90[1 + 3 + 0 ]];end elseif ((v91<=(9 + (7 -2))) or ((3233 + 962)<=1225)) then if ((v91<=(40 -29)) or ((15907 -12357)<=(4634 -1165))) then if (((8320 -4904)>=(2434 + 528)) and (v91==(9 + 1))) then local v146=0;local v147;local v148;local v149;while true do if ((v146==(1 -0)) or (272>(4926 -3624))) then v149=nil;while true do if (((2204 -(604 + 304))==(591 + 705)) and (v147==(1 + 0))) then v88[v148 + (3 -2) ]=v149;v88[v148]=v149[v90[8 -4 ]];break;end if (((4621 -(211 + 170))>3898) and (0==v147)) then local v266=0 + 0 ;while true do if (((3989 -(1346 + 28))<=(4980 -(132 + 169))) and (v266==(0 + 0))) then v148=v90[1 + 0 + 1 ];v149=v88[v90[3]];v266=1;end if (((1 + 0)==v266) or ((221 -38)>=(2707 -(87 + 35 + 539 + 83)))) then v147=1 + 0 ;break;end end end end break;end if ((v146==(0 -(0 -0))) or ((2663 -1424)>(327 + 3116))) then v147=1654 -(1160 + 494) ;v148=nil;v146=1 -0 ;end end else v88[v90[1 + 1 ]]=v30(v83[v90[2 + 1 ]],nil,v52);end elseif (((2478 -1841)<=(3943 + 450)) and (v91<=(4 + 8))) then v52[v90[3]]=v88[v90[1431 -(1018 + 411) ]];elseif (((73 + 4620)>=((1064 + 838) -(553 + (133 -(30 + 3))))) and (v91>(1397 -(1368 + 16)))) then v88[v90[(26 -17) -7 ]]=v90[3]~=0 ;else local v193=v90[363 -(183 + 178) ];local v194=v90[3 + 1 ];local v195=v193 + (4 -2) ;local v196={v88[v193](v88[v193 + (1 -0) ],v88[v195])};for v232=887 -((1196 -(227 + 210)) + 127) ,v194 do v88[v195 + v232 ]=v196[v232];end local v197=v196[1 -0 ];if (((5092 -1003)==(7634 -3545)) and v197) then local v240=(1604 -(1509 + 95)) -0 ;while true do if (((397 + 643)<=(10437 -7209)) and (v240==((274 + 464) -(403 + 335)))) then v88[v195]=v197;v71=v90[3];break;end end else v71=v71 + (1 -0) ;end end elseif ((v91<=(2 + 7 + 8)) or ((2611 + 1033)<(1509 -730))) then if ((((1921 -(405 + 351)) + 1167)<=3128) and (v91<=15)) then local v153=0 + 0 ;local v154;local v155;while true do if ((v153==(1726 -(628 + 305 + 793))) or ((1290 + 2627)<(68 + 81))) then v154=0 + 0 + 0 ;v155=nil;v153=439 -(256 + 182) ;end if ((v153==(3 -2)) or (4382==1817)) then while true do if ((v154==0) or ((2317 -(20 + 174))>(4369 -(48 + (1515 -(387 + 1061)))))) then v155=v90[1682 -(788 + 892) ];v88[v155]=v88[v155](v88[v155 + 1 ]);break;end end break;end end elseif ((v91==(16 + 0)) or ((2220 -(360 + 1561))>=4732)) then v88[v90[2]]=v88[v90[(1293 -(241 + 1045)) -4 ]];else local v200=0 -0 ;local v201;local v202;local v203;local v204;while true do if ((v200==((2 -0) -1)) or ((10 + 1970)>=(3874 -1868))) then local v252=0 -0 ;while true do if ((3656<=4120) and ((87 -(76 + 11))==v252)) then v72=(v203 + v201) -(1 + 0) ;v204=1236 -(374 + 862) ;v252=1 -(0 + 0) ;end if ((1544>(638 + 61)) and (v252==((2199 -(336 + 1603)) -(177 + 82)))) then v200=440 -(204 + 234) ;break;end end end if (((4 -2)==v200) or (((7294 -3466) -1048)>(3661 + 1136))) then for v269=v201,v72 do local v270=0 + 0 ;local v271;while true do if (((2896 -1089)<=(11351 -(34153 -26071))) and (v270==(0 -0))) then v271=0 + 0 ;while true do if ((((830 -(206 + 624)) -0)==v271) or ((378 + 258)==((3097 -949) -(163 + 943)))) then v204=v204 + 1 ;v88[v269]=v202[v204];break;end end break;end end end break;end if ((v200==(0 -0)) or (((1192 + 652) -(466 + 57))>2033)) then v201=v90[(7 + 1) -6 ];v202,v203=v85(v88[v201](v88[v201 + (1244 -((1661 -(974 + 160)) + 716)) ]));v200=3 -(4 -2) ;end end end elseif ((((20044 -15530) + 300)>(559 + (4358 -(836 + 48)))) and (v91<=18)) then local v156=0;local v157;local v158;local v159;local v160;local v161;while true do if ((v156==(1 + 0)) or ((2951 -1596)>3579)) then v159=nil;v160=nil;v156=2;end if (((115 + 62)<(2069 -(292 + 499))) and (v156==(0 -(210 -(108 + 102))))) then v157=0 + 0 ;v158=nil;v156=1;end if (((5 + 1)<=((5811 -(839 + 931)) -(431 + 200))) and (v156==2)) then v161=nil;while true do if (((4233 -(47 + 45))>(4899 -2716)) and (v157==1)) then v160=nil;v161=nil;v157=2;end if (((2324 -731)<=(2661 + (2966 -941))) and ((1025 -(927 + 98))==v157)) then local v272=0;while true do if ((v272==(1 + 0)) or ((2136 -687)==2865)) then v157=1;break;end if ((v272==(0 + 0)) or ((2735 -1496)>=(2433 -1194))) then v158=0 -0 ;v159=nil;v272=(1444 -(906 + 537)) + 0 ;end end end if (((1775 -474)==(1078 + 223)) and (v157==(2 -0))) then while true do if (((121 + 1716)>(1087 -(123 + 4 + 909))) and (v158==(628 -(393 + 233)))) then for v312=2 -1 ,v90[4] do local v313=892 -(814 + 78) ;local v314;local v315;while true do if ((v313==1) or (((54967 -33337) -17022)==(3287 -(241 + 337)))) then while true do if ((((30414 -21234) -5331)>=(795 + 179 + 2220)) and (v314==((262 -81) -(71 + 109)))) then if ((v315[678 -(181 + 496) ]==(750 -(206 + 528))) or ((6366 -(4206 -(22 + 21)))==(3112 -(655 + 1105)))) then v161[v312-(1384 -(549 + (1563 -729))) ]={v88,v315[(1537 -(679 + 856)) + 1 ]};else v161[v312-(1 + 0) ]={v51,v315[6 -3 ]};end v87[ #v87 + (1 -0) ]=v161;break;end if (((1716 + 1750)>((1910 -939) -(182 + 336))) and (v314==(0 -0))) then local v345=0 + 0 ;while true do if (((1286 + 277)<=2657) and (v345==(0 + 0))) then local v361=0 + 0 ;while true do if (((4062 -(780 + 23))<(6257 -1692)) and (v361==(0 + 0 + 0))) then v71=v71 + 1 + 0 ;v315=v82[v71];v361=1151 -(434 + 716) ;end if (((3292 -1692)<(2069 + 888)) and (1==v361)) then v345=1;break;end end end if ((v345==(1 -0)) or ((1518 -(53 + 367))==1368)) then v314=2 -1 ;break;end end end end break;end if ((((4048 + 1829) -(266 + 1376))==(4547 -((955 -(606 + 85)) + 48))) and ((54 -(10 + 24 + 20))==v313)) then local v340=0 -0 ;while true do if ((v340==(962 -(112 + 849))) or ((1324 -731)==(2076 + 1512))) then v313=1843 -(788 + 1054) ;break;end if ((v340==(0 -0)) or ((1358 -((1796 -(719 + 21)) + 301))>=((1364 + 3401) -(1669 + 289)))) then v314=0 -0 ;v315=nil;v340=119 -(65 + 53) ;end end end end end v88[v90[1 + 1 ]]=v30(v159,v160,v52);break;end if (((5735 -2002)>(4189 -(485 + 727))) and (v158==(1719 -((1711 -(55 + 9)) + 71)))) then local v303=0;while true do if ((v303==1) or (2630==((10779 -7673) + 1675))) then v158=2;break;end if (((150 -44)<=(9165 -5397)) and ((0 + 0)==v303)) then local v332=1266 -(473 + 793) ;while true do if (((615 + 1141)>=268) and (v332==(400 -(327 + (331 -258))))) then v161={};v160=v10({},{__index=function(v346,v347)local v348=0;local v349;while true do if (((3586 -(129 + 200))<((8973 -4182) -(246 + 928))) and (0==v348)) then v349=v161[v347];return v349[1][v349[4 -2 ]];end end end,__newindex=function(v350,v351,v352)local v353=0;local v354;local v355;while true do if ((2110>=(904 -512)) and (v353==1)) then while true do if ((532==532) and (v354==((0 -0) + 0))) then v355=v161[v351];v355[1 -0 ][v355[1 + 1 + 0 ]]=v352;break;end end break;end if ((0==v353) or ((3107 -(523 + 112))<(182 + 839))) then v354=193 -(15 + 178) ;v355=nil;v353=(347 -158) -(85 + 103) ;end end end});v332=1;end if ((v332==(2 -1)) or ((5613 -3617)<(2734 -1628))) then v303=832 -(619 + 212) ;break;end end end end end if (((1357 -(844 + 269))<(448 -(22 + 4))) and (v158==0)) then local v304=0;while true do if ((v304==(1 -0)) or ((4912 -(1576 + 203))==3356)) then v158=1;break;end if (((7826 -4723)>=(2233 + 252)) and (v304==(447 -(158 + 289)))) then v159=v83[v90[13 -10 ]];v160=nil;v304=1 + 0 ;end end end end break;end end break;end end elseif (((2209 -1560)<(3980 -2888)) and (v91==19)) then v88[v90[2 + 0 ]]={};else v88[v90[9 -7 ]]=v88[v90[593 -(278 + 312) ]] + v88[v90[4]] ;end elseif ((v91<=(1724 -(1409 + 285))) or ((1717 -(449 + (471 -261)))>(310 + 983))) then if (((4539 -1766)<=3974) and (v91<=((1428 -(789 + 582)) -32))) then if (((4480 -1747)==2733) and (v91<=(97 -75))) then if ((v91>(54 -33)) or ((1278 + 1518)>=(9330 -6148))) then local v162=1121 -(357 + 764) ;local v163;local v164;while true do if ((v162==0) or (276>((9612 -(459 + 362)) -5800))) then local v235=0 -0 ;while true do if (((329 + 2346)>=((5591 -2828) -(503 + 606 + 428))) and (v235==(1927 -(372 + 1555)))) then v163=v90[2];v164={};v235=1;end if (((7498 -5205)>=258) and (v235==(1 -(1888 -(1138 + 750))))) then v162=1;break;end end end if (((1934 -(940 + 286))<(4175 -2667)) and (v162==(4 -3))) then for v241=1, #v87 do local v242=0;local v243;local v244;while true do if ((v242==(19 -(15 + (1490 -(156 + 1330))))) or (2266>=3663)) then v243=178 -(21 + 157) ;v244=nil;v242=1 + 0 ;end if (((14247 -9421)>(485 + 856)) and (v242==(500 -(182 + 317)))) then while true do if (((2464 -1722)>(1134 -728)) and (v243==(0 + 0 + 0))) then v244=v87[v241];for v321=0 -0 , #v244 do local v322=1031 -(237 + 794) ;local v323;local v324;local v325;local v326;local v327;while true do if (((8690 -6845)<(3174 -(238 + 639))) and (v322==(0 -0))) then v323=0;v324=nil;v322=2 -1 ;end if ((v322==(1 + 0)) or ((5963 -(1189 + 394))==(1677 -(961 + (232 -(121 + 49)))))) then v325=nil;v326=nil;v322=6 -(6 -2) ;end if (((262 + 27 + 2997)==(15948 -12662)) and ((3 -1)==v322)) then v327=nil;while true do if (((876 -(49 + 721))<=1478) and (v323==(2 + 0))) then while true do if (((5077 -(147 + 1059))==((6221 -(550 + 1191)) -(220 + 389))) and (v324==(1 + (0 -0)))) then v327=v325[842 -(515 + 325) ];if ((((1704 -(7 + 1213)) + (2056 -(1413 + 158)))>(1330 -(33 + 345))) and (v326==v88) and (v327>=v163)) then local v372=0;local v373;while true do if (((3712 -(886 + 814))>(42 + 375)) and (v372==(0 -(0 -0)))) then v373=0 -0 ;while true do if ((v373==((1032 -(87 + 638)) -(176 + 131))) or ((2598 + 803)>=((3125 -2026) + 3545))) then v164[v327]=v326[v327];v325[4 -3 ]=v164;break;end end break;end end end break;end if (((1468 -(356 + 911 + 201))==v324) or ((6832 -2458)<3286)) then local v365=0 -0 ;local v366;while true do if ((v365==0) or (2610>=2668)) then v366=0 -0 ;while true do if ((v366==(146 -(98 + 47))) or (3821<=(5436 -2089))) then v324=1 + 0 ;break;end if ((2923<(5564 -(361 + 1199))) and (v366==(1629 -(787 + 842)))) then local v376=1977 -(1063 + 914) ;while true do if ((v376==(767 -(158 + 608))) or ((257 + 124 + 1758)<=(385 + 795))) then v366=1030 -(329 + 700) ;break;end if (((7236 -4592)<(5145 -(264 + 54))) and (v376==(0 + 0))) then v325=v244[v321];v326=v325[1];v376=4 -(1 + 2) ;end end end end break;end end end end break;end if ((2979>=878) and (v323==(1 + 0))) then v326=nil;v327=nil;v323=(4 -2) + 0 + 0 ;end if (((800 + 3978)>=(2591 + 992)) and (v323==(0 + 0 + 0))) then local v356=0 -0 ;while true do if (((1776 -898)==(2246 -1368)) and (v356==(550 -((1054 -(636 + 158)) + 289)))) then v323=1 -0 ;break;end if (((5903 -3959)==(84 + 1860)) and (v356==0)) then v324=0;v325=nil;v356=1;end end end end break;end end end break;end end break;end end end break;end end elseif ((v90[2 + 0 ]==v88[v90[(23 -13) -6 ]]) or ((16 -(1569 -(1015 + 544)))>=(16956 -12365))) then v71=v71 + 1 ;else v71=v90[3];end elseif ((v91<=(20 + 3)) or (((1612 + 4315) -4069)==(313 + 307 + 162))) then local v165=0 -0 ;local v166;local v167;local v168;while true do if (((1719 + 2298)>=(9403 -5576)) and (v165==(1120 -(431 + 689)))) then v166=v90[(1281 -(1143 + 134)) -2 ];v167={v88[v166](v13(v88,v166 + 1 + 0 ,v72))};v165=1;end if ((4124==(184 + 3940)) and (v165==(193 -(59 + 133)))) then v168=0 + 0 ;for v245=v166,v90[2 + 2 ] do local v246=0;local v247;while true do if ((3112==(3455 -(234 + 109))) and (v246==0)) then v247=1764 -(1524 + 240) ;while true do if (((756 + 879)<=(2820 -(167 + 91))) and (v247==(0 -0))) then v168=v168 + (291 -(5 + 285)) ;v88[v245]=v167[v168];break;end end break;end end end break;end end elseif ((v91>24) or (((2660 -(279 + 540)) -(700 + 878))>=(5302 -(1034 + 796)))) then local v208=1675 -(170 + 435 + (1642 -(259 + 313))) ;local v209;local v210;local v211;while true do if ((v208==((2224 -(491 + 30)) -(618 + 1085))) or (2680>=2990)) then v209=426 -(263 + 163) ;v210=nil;v208=1 + 0 ;end if ((v208==(1 -0)) or ((13282 -10287)>=(5341 -(368 + 763)))) then v211=nil;while true do if ((v209==((308 -(160 + 148)) + 0)) or (((4086 + 616) -(65 + 628))<730)) then v210=v90[4 -1 ];v211=v88[v210];v209=4 -3 ;end if ((v209==(1 + 0)) or ((2958 -(640 + 1256))==4123)) then for v305=v210 + (2 -1) ,v90[1 + 3 ] do v211=v211   .. v88[v305] ;end v88[v90[2]]=v211;break;end end break;end end elseif (v88[v90[687 -(602 + 83) ]] or ((128 + 1227)>(5910 -(1051 + 256)))) then v71=v71 + (1072 -(1033 + 38)) + 0 ;else v71=v90[2 + 1 ];end elseif (((635 + 1638)>=(740 + 210 + 897)) and (v91<=(1170 -(63 + 1080)))) then if (((1883 -(427 + 215))<=(4442 -(433 + 718))) and (v91>26)) then v88[v90[2]]();else local v169=0;local v170;while true do if ((2571<=(5833 -(188 + 693))) and (v169==((0 -0) -0))) then v170=v90[1431 -(848 + 581) ];do return v88[v170](v13(v88,v170 + 1 ,v90[9 -6 ]));end break;end end end elseif (((5858 -((1462 -(28 + 617)) + 751))>(3626 -(605 + 130))) and (v91<=28)) then for v177=v90[1 + 0 + 1 ],v90[1 + 2 ] do v88[v177]=nil;end elseif (((4045 + 273)==4318) and (v91==((832 -(427 + 342)) -34))) then local v212=0 + 0 ;local v213;local v214;while true do if (((4375 -(435 + 236))>(853 + 331 + 280)) and (v212==(0 -(0 + 0)))) then v213=1276 -(802 + 474) ;v214=nil;v212=1;end if ((v212==(978 -(873 + 104))) or ((3054 -1324)==(7724 -5536))) then while true do if ((v213==(0 + 0)) or (1057>1291)) then v214=v90[3 -1 ];v88[v214]=v88[v214]();break;end end break;end end else v88[v90[327 -(71 + 254) ]]=v90[398 -(67 + 328) ];end elseif ((v91<=(3 + 32)) or ((4391 -((2925 -1620) + 219))<=2108)) then if ((v91<=(1358 -(558 + 768))) or ((3225 -(172 + 579))>=2692)) then if (((3115 -(364 + 976))==1775) and (v91>(119 -(1520 -(70 + 1362))))) then if ((v88[v90[2 + 0 ]]==v90[923 -(653 + 266) ]) or ((2778 -(1675 + 28))>2287)) then v71=v71 + ((7669 -5798) -(188 + (3476 -(1552 + 242)))) ;else v71=v90[1646 -(1562 + (175 -94)) ];end else local v171=1483 -(121 + 1362) ;local v172;while true do if (((8391 -5459)>=(1410 -(17 + 277 + 943))) and (v171==(0 + 0))) then v172=v90[(5 -3) -0 ];v88[v172]=v88[v172](v13(v88,v172 + (3 -2) ,v72));break;end end end elseif ((v91<=33) or ((1594 + 290)<=(854 -(141 + 22)))) then if ((v88[v90[7 -5 ]]~=v88[v90[126 -(103 + 19) ]]) or ((7617 -5227)<=(3087 -(124 + 1136)))) then v71=v71 + (2 -1) ;else v71=v90[14 -11 ];end elseif ((v91==(45 -11)) or ((2104 -(188 + 543))==4614)) then do return;end else v88[v90[611 -(186 + 423) ]]=v88[v90[6 -3 ]] * v90[1 + 3 ] ;end elseif ((v91<=38) or ((13344 -9014)<=2455)) then if (((2151 + 1358)>2919) and (v91<=(1565 -(690 + 839)))) then if ( not v88[v90[2 + 0 ]] or ((1499 + 738 + 538)>(3098 -(133 + 184)))) then v71=v71 + (1719 -(58 + 1660)) ;else v71=v90[3];end elseif (((4736 -(882 + 32))<(14509 -10120)) and (v91>(927 -(742 + 148)))) then local v221=0 -0 ;local v222;while true do if ((v221==0) or (3534<(939 + 75))) then v222=v90[3 -1 ];v88[v222](v13(v88,v222 + 1 ,v90[(1 -0) + 2 ]));break;end end else local v223=265 -(158 + 107) ;local v224;while true do if (((713 + 510)<=(4819 -1929)) and (v223==0)) then v224=v88[v90[4 + 0 ]];if ( not v224 or (((2855 + 7) -(156 + 204))<((9913 -6354) -(992 + 106)))) then v71=v71 + (488 -(272 + 215)) ;else local v285=537 -(138 + 399) ;while true do if (((291 + 3)<(4988 -((1929 -1224) + (1985 -(887 + 510))))) and (v285==(0 + 0))) then v88[v90[4 -2 ]]=v224;v71=v90[(2 -1) + 2 ];break;end end end break;end end end elseif ((4257==(7343 -3086)) and (v91<=(5 + 1 + (48 -15)))) then local v173=0 + 0 ;local v174;local v175;local v176;while true do if (((4353 -(832 + 1140))>=(2137 -(84 + 1328))) and (v173==1)) then v176=nil;while true do if ((v174==(0 + 0)) or ((3029 -884)>=(11214 -(1655 + 7011)))) then local v274=(0 + 0) -0 ;while true do if ((v274==(0 + 0)) or ((1935 + 1238)<=(128 + 2303))) then v175=v90[1 + 1 ];v176=v88[v175];v274=427 -(101 + 325) ;end if ((v274==1) or ((10799 -6963)>(7778 -3228))) then v174=1 -0 ;break;end end end if (((14320 -9754)>(3480 -(638 + 89))) and (v174==(1679 -(514 + 1164)))) then for v286=v175 + 1 + 0 ,v90[1113 -(311 + 799) ] do v7(v176,v88[v286]);end break;end end break;end if (((1912 -(650 + 922))<((2816 -(837 + 363)) + (425 -267))) and ((0 + 0)==v173)) then v174=576 -(267 + 309) ;v175=nil;v173=(2 + 0) -1 ;end end elseif (((2352 -1259)<2954) and (v91>(58 -18))) then local v225=0 + 0 ;local v226;local v227;local v228;while true do if ((((9217 -(476 + 690)) -4042)>(1272 -(124 + 81))) and (v225==1)) then v228=v90[3];for v275=1 + 0 ,v228 do v227[v275]=v88[v226 + v275 ];end break;end if (((3318 + 605)>=(953 -707)) and (v225==0)) then local v257=0;while true do if (((635 -(137 + 104))==(894 -500)) and ((1774 -(388 + 94 + 1292))==v257)) then v226=v90[1392 -(32 + 1358) ];v227=v88[v226];v257=1 + 0 + 0 ;end if ((3649==(152 + 3497)) and (v257==(1 -(0 + 0)))) then v225=880 -(762 + 117) ;break;end end end end else v88[v90[2]]=v52[v90[2 + 1 ]];end v71=v71 + 1 + 0 ;break;end if ((v96==(0 + 0)) or (((12540 -8594) -(501 + 1154))>=(4301 -(1296 + 177)))) then local v115=0 + 0 ;while true do if (((1156 + 45)==(416 + 785)) and (v115==(0 -0))) then v90=v82[v71];v91=v90[1];v115=1;end if (((1 -0)==v115) or ((1836 -(254 + 63 + 595))==(1288 -(29 + 5 + 101)))) then v96=1;break;end end end end break;end end end end v70=3;end end end;end return v30(v29(),{},v17)(...);end if (v18==1) then function v21(v56,v57,v58)if v58 then local v78=1662 -(681 + 981) ;local v79;while true do if (v78==(0 -0)) then v79=(v56/(2^(v57-((936 -(486 + 449)) + 0))))%(((1439 -(486 + 952)) + 1)^(((v58-(1 + 0)) -(v57-(2 -1))) + 1)) ;return v79-(v79%1) ;end end else local v80=(4 -2)^(v57-(1 + 0)) ;return (((v56%(v80 + v80))>=v80) and (1 -0)) or (314 -(226 + 88)) ;end end v22=nil;function v22()local v59=0 -0 ;local v60;while true do if (v59==(1 -0)) then return v60;end if (v59==(0 -0)) then v60=v1(v16,v19,v19);v19=v19 + (3 -2) ;v59=367 -(57 + 309) ;end end end v23=nil;v18=2;end if (v18==2) then function v23()local v61,v62=v1(v16,v19,v19 + (1650 -(624 + 1024)) );v19=v19 + (5 -3) ;return (v62 * (988 -732)) + v61 ;end v24=nil;function v24()local v63=0;local v64;local v65;local v66;local v67;while true do if (v63==(41 -(10 + 30))) then return (v67 * (42005461 -25228245)) + (v66 * ((53787 -(345 + 1241)) + (14310 -(233 + 742)))) + (v65 * (115 + 141)) + v64 ;end if (v63==(0 + 0)) then v64,v65,v66,v67=v1(v16,v19,v19 + 2 + 1 );v19=v19 + 1 + 3 ;v63=692 -(211 + 480) ;end end end v25=nil;v18=3;end end end vv9(),...);end
