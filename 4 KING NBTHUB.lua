--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v73=0;local v74;while true do if (v73==0) then v74=v2(v0(v30,16));if v19 then local v111=v5(v74,v19);v19=nil;return v111;else return v74;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v75=(v31/((400 -(205 + 193))^(v32-(1604 -(1182 + 421)))))%((1 + 1)^(((v33-(1052 -(831 + 220))) -(v32-(1564 -(668 + 649 + 246)))) + (2 -1))) ;return v75-(v75%1) ;else local v76=0 + 0 ;local v77;while true do if (v76==0) then v77=(1 + 1)^(v32-1) ;return (((v31%(v77 + v77))>=v77) and (1 + (1225 -(976 + 249)))) or (0 + 0) ;end end end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==(341 -(296 + 44))) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=(155 -(80 + 72)) -2 ;end end end local function v22()local v36=321 -(65 + 256) ;local v37;local v38;while true do if (v36==(1014 -(847 + 167))) then v37,v38=v1(v16,v18,v18 + (1659 -((754 -(39 + 447)) + 1389)) );v18=v18 + (1832 -(1606 + 224)) ;v36=1;end if (v36==(1 -0)) then return (v38 * ((1953 -1258) -439)) + v37 ;end end end local function v23()local v39=(1162 -(1127 + 35)) + 0 + 0 ;local v40;local v41;local v42;local v43;while true do if (v39==(1725 -(1144 + 580))) then return (v43 * (16778395 -(1167 + 12))) + (v42 * (1145 + 64391)) + (v41 * (595 -(278 + 61))) + v40 ;end if (v39==(0 + 0)) then v40,v41,v42,v43=v1(v16,v18,v18 + 3 );v18=v18 + 4 ;v39=(1465 -(752 + 712)) + 0 ;end end end local function v24()local v44=v23();local v45=v23();local v46=1743 -(962 + (1050 -(21 + 249))) ;local v47=(v20(v45,1 + 0 + 0 ,20 + 0 ) * ((760 -(293 + 465))^32)) + v44 ;local v48=v20(v45,57 -36 ,611 -(302 + 278) );local v49=((v20(v45,(15 -8) + 25 )==(3 -2)) and  -(1 + 0)) or (3 -2) ;if (v48==0) then if (v47==(0 + (553 -(496 + 57)))) then return v49 * ((1705 -1246) -(257 + 202)) ;else local v83=0 + 0 ;while true do if (v83==(0 + 0)) then v48=1;v46=0 -0 ;break;end end end elseif (v48==2047) then return ((v47==(0 + 0)) and (v49 * ((1 -0)/((158 -(76 + 82)) + 0)))) or (v49 * NaN) ;end return v8(v49,v48-1023 ) * (v46 + (v47/(2^(234 -182)))) ;end local function v25(v50)local v51=0;local v52;local v53;while true do if ((1376 -(460 + 915))==v51) then v52=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;v51=5 -3 ;end if ((4 -2)==v51) then v53={};for v84=1135 -(802 + 332) , #v52 do v53[v84]=v2(v1(v3(v52,v84,v84)));end v51=3 + 0 ;end if (v51==(926 -(710 + 216))) then v52=nil;if  not v50 then v50=v23();if (v50==(0 + 0)) then return "";end end v51=1207 -(137 + 774 + 295) ;end if (v51==(1708 -(589 + (2612 -1496)))) then return v6(v53);end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==(1 + 2)) then local v78=0;local v79;while true do if (v78~=0) then else v79=0 -0 ;while true do if (v79==0) then for v117=3 -2 ,v23() do v56[v117-(1350 -(222 + 1127)) ]=v28();end for v119=119 -(81 + 37) ,v23() do v57[v119]=v23();end v79=1;end if ((810 -(242 + 567))==v79) then return v58;end end break;end end end if (v54==2) then for v86=1 + 0 ,v59 do local v87=0;local v88;local v89;local v90;while true do if (0~=v87) then else local v112=0 -0 ;while true do if (v112==(173 -(109 + 64))) then v88=0;v89=nil;v112=1 + 0 ;end if ((3 -2)~=v112) then else v87=1;break;end end end if (v87==1) then v90=nil;while true do if (v88==0) then local v121=0;while true do if (v121==(1 -0)) then v88=1591 -(1173 + 417) ;break;end if (v121~=0) then else v89=v21();v90=nil;v121=1 -0 ;end end end if (v88==(1 + 0)) then if (v89==(363 -(60 + 302))) then v90=v21()~=(1942 -(749 + 1193)) ;elseif (v89==(1486 -(457 + 1027))) then v90=v24();elseif (v89==3) then v90=v25();end v60[v86]=v90;break;end end break;end end end v58[3]=v21();for v91=591 -(232 + 358) ,v23() do local v92=0 -0 ;local v93;local v94;while true do if (v92~=(1 + 0)) then else while true do if (v93~=(0 -0)) then else v94=v21();if (v20(v94,1,1905 -(1185 + 719) )~=(0 + 0)) then else local v123=0 -0 ;local v124;local v125;local v126;local v127;local v128;local v129;while true do if (v123~=(6 -4)) then else v128=nil;v129=nil;v123=2 + 1 ;end if (v123==0) then v124=0 -0 ;v125=nil;v123=1;end if (v123~=1) then else v126=nil;v127=nil;v123=2;end if (v123==(7 -4)) then while true do if (v124~=(3 -1)) then else v129=nil;while true do if (0==v125) then local v133=0 + 0 ;while true do if (v133~=1) then else v125=355 -(349 + 5) ;break;end if (v133==(0 -0)) then v126=106 -(74 + 32) ;v127=nil;v133=19 -(5 + 13) ;end end end if (v125==1) then local v134=0;local v135;while true do if (0~=v134) then else v135=0;while true do if (v135~=(1 + 0)) then else v125=1578 -(1369 + 207) ;break;end if (0==v135) then v128=nil;v129=nil;v135=1;end end break;end end end if (v125~=2) then else while true do if (v126~=(2 + 1)) then else if (v20(v128,5 -2 ,1146 -(221 + 922) )~=(1514 -(1253 + 260))) then else v129[4]=v60[v129[4]];end v55[v91]=v129;break;end if (v126==0) then local v138=0;local v139;while true do if (v138==(0 -0)) then v139=0;while true do if (v139==0) then v127=v20(v94,2 + 0 ,3);v128=v20(v94,4,6);v139=1;end if (v139==(2 -1)) then v126=1;break;end end break;end end end if (v126==1) then local v140=654 -(591 + 63) ;while true do if ((0 + 0)==v140) then local v231=0;local v232;while true do if (v231==(0 -0)) then v232=0;while true do if (v232==1) then v140=1;break;end if (v232~=(0 -0)) then else v129={v22(),v22(),nil,nil};if (v127==(0 -0)) then local v310=1398 -(1313 + 85) ;local v311;local v312;local v313;while true do if (v310==(0 + 0)) then v311=0;v312=nil;v310=1 + 0 ;end if (v310==(2 -1)) then v313=nil;while true do if (v311~=0) then else local v343=0;while true do if (v343==(1905 -(1212 + 692))) then v311=1;break;end if (v343==0) then v312=0 -0 ;v313=nil;v343=1;end end end if (v311==1) then while true do if (v312~=0) then else v313=0;while true do if (v313==(0 + 0)) then v129[3]=v22();v129[3 + 1 ]=v22();break;end end break;end end break;end end break;end end elseif (v127==1) then v129[8 -5 ]=v23();elseif (v127==2) then v129[2 + 1 ]=v23() -(2^(11 + 5)) ;elseif (v127==(2 + 1)) then local v344=0;local v345;while true do if (v344~=(63 -(7 + 56))) then else v345=0;while true do if (0~=v345) then else v129[2 + 1 ]=v23() -((1086 -(100 + 984))^(2 + 14)) ;v129[4]=v22();break;end end break;end end end v232=1;end end break;end end end if (v140==1) then v126=2;break;end end end if (v126~=2) then else local v141=0;local v142;local v143;while true do if (0==v141) then v142=0;v143=nil;v141=2 -1 ;end if ((1 + 0)==v141) then while true do if (0==v142) then v143=0 + 0 ;while true do if (v143~=(950 -(167 + 783))) then else local v290=0 + 0 ;while true do if (v290==1) then v143=732 -(723 + 8) ;break;end if (v290==(0 + 0)) then local v323=0;while true do if (v323~=(1 + 0)) then else v290=1 + 0 ;break;end if (v323==0) then if (v20(v128,1761 -(1057 + 703) ,1 + 0 )==(1525 -(1502 + 22))) then v129[2]=v60[v129[1 + 1 ]];end if (v20(v128,2,2)==1) then v129[3]=v60[v129[3]];end v323=1;end end end end end if (v143==(1998 -(1356 + 641))) then v126=3;break;end end break;end end break;end end end end break;end end break;end if (v124~=1) then else v127=nil;v128=nil;v124=2 + 0 ;end if (v124~=0) then else local v132=0 + 0 ;while true do if (v132==(1 + 0)) then v124=656 -(532 + 123) ;break;end if (v132~=0) then else v125=0 + 0 ;v126=nil;v132=1;end end end end break;end end end break;end end break;end if ((0 + 0)==v92) then v93=0;v94=nil;v92=2 -1 ;end end end v54=12 -9 ;end if ((1 + 0)==v54) then v58={v55,v56,nil,v57};v59=v23();v60={};v54=2;end if (v54==(0 -0)) then local v81=0;local v82;while true do if (0~=v81) then else v82=0;while true do if ((1 + 0)==v82) then v57={};v54=1 -0 ;break;end if (v82==0) then v55={};v56={};v82=1 + 0 ;end end break;end end end end end local function v29(v61,v62,v63)local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==2) then v72=nil;function v72()local v95=v64;local v96=v65;local v97=v66;local v98=v27;local v99={};local v100={};local v101={};for v105=0 -0 ,v71 do if ((v105>=v97) or ((1960 -(168 + 21))<1565)) then v99[v105-v97 ]=v70[v105 + (1 -0) ];else v101[v105]=v70[v105 + (555 -(153 + 401)) ];end end local v102=(v71-v97) + (4 -3) ;local v103;local v104;while true do local v106=(0 + 0) -0 ;local v107;local v108;while true do if (((14864 -11177)==(4771 -(997 + 87))) and (v106==(0 + 0))) then v107=0 + 0 ;v108=nil;v106=(4 -3) + 0 ;end if (((949 + 977)==(1435 + 491)) and (v106==(1 + 0))) then while true do if ((v107==(809 -(83 + 726))) or ((1551 -(316 + 448))>(4694 -(469 + 101)))) then v108=0 + 0 + 0 ;while true do if ((((178 -124) + 2104)<(13587 -9828)) and ((0 + 0)==v108)) then local v130=1877 -(1609 + 268) ;local v131;while true do if ((v130==(0 -0)) or ((3293 -(735 + 194))<=2282)) then v131=0 + 0 ;while true do if ((v131==(1 + 0 + 0)) or ((2674 -1251)<=(3335 -2489))) then v108=1 -0 ;break;end if (((1374 -1069)<(6355 -(1320 + 58))) and (0==v131)) then local v136=0 + (0 -0) ;while true do if (((751 -343)==((1000 + 2) -594)) and (v136==(0 + 0))) then v103=v95[v68];v104=v103[711 -(432 + (917 -639)) ];v136=1 + 0 ;end if ((v136==(1 + 0)) or (1261>=(151 + 3782))) then v131=1 + 0 ;break;end end end end break;end end end if ((((7235 -1991) -(31 + 546))==(5544 -(429 + 448))) and (v108==(1006 -(88 + 917)))) then if ((v104<=(29 -13)) or ((2210 -(107 + (352 -217)))>=((27689 -13693) -9949))) then if (((1436 -1019)==((2693 -(185 + 206)) -(354 + 1531))) and (v104<=7)) then if ((v104<=(1522 -(417 + 1102))) or ((2235 + 945)==(4140 -(1443 + 301)))) then if (((1396 + 66)<(3452 + 1240)) and (v104<=(1 + (0 -0)))) then if ((v104>(0 + 0)) or ((3743 -2102)<=(145 -41))) then v101[v103[2 + 0 ]]=v103[2 + 1 ];elseif (((10067 -6415)>(1490 -250)) and (v103[1 + 1 ]==v101[v103[1 + 3 ]])) then v68=v68 + (1991 -(341 + 1649)) ;else v68=v103[311 -((956 -(168 + 649)) + (560 -391)) ];end elseif ((v104>(1831 -(876 + 953))) or ((5177 -2576)>=(4138 -(66 + 161)))) then v101[v103[3 -1 ]]=v103[939 -(614 + 322) ]~=(1237 -(554 + 683)) ;elseif (((7222 -5717)>=(3438 -2217)) and (v101[v103[1 + 1 ]]==v103[(285 + 423) -(542 + 162) ])) then v68=v68 + (3 -2) ;else v68=v103[3];end elseif (((5918 -(473 + 1141))>(12382 -8846)) and (v104<=(6 -1))) then if (((1229 + 2325)<=(4979 -(721 + 269))) and (v104==(9 -5))) then local v149=0 + 0 ;local v150;local v151;local v152;local v153;while true do if ((v149==(0 + 0)) or (4257<=(533 -(384 + 46)))) then v150=(3571 -2176) -(949 + 446) ;v151=nil;v149=(1 -0) + 0 ;end if (((5859 -(779 + 235))>=(3895 -(136 + 701))) and (1==v149)) then v152=nil;v153=nil;v149=2;end if ((v149==(315 -(166 + 147))) or ((283 + 1029)==(3013 + 1689))) then while true do if ((v150==(1498 -(1394 + 104))) or ((5007 -1784)<=(807 -(283 + 190)))) then local v254=(0 + 0) -0 ;while true do if ((v254==(1 + 0)) or (((5699 -(56 + 166)) -4046)>=(7501 -4720))) then v150=416 -(115 + 300) ;break;end if (((2200 -(230 + 395))>=((1660 -(95 + 731)) -535)) and (v254==(0 -0))) then v151=v103[3 -(78 -(43 + 34)) ];v152=v101[v151];v254=1;end end end if (((1 + 0)==v150) or (((8472 -(580 + 1229)) -1987)<(290 + 4087))) then v153=v101[v151 + 1 + 1 ];if ((v153>(20 -(17 + 3))) or ((11788 -8028)<(67 + 80 + 334))) then if (((1776 + 1213)>(2300 -(458 + 3))) and (v152>v101[v151 + 1 + 0 ])) then v68=v103[1 + 2 ];else v101[v151 + 1 + 2 ]=v152;end elseif ((v152<v101[v151 + 1 + (1824 -(1171 + 653)) ]) or ((705 + 1536)<(1463 -763))) then v68=v103[7 -(9 -5) ];else v101[v151 + ((2 + 3) -2) ]=v152;end break;end end break;end end else v68=v103[7 -4 ];end elseif (((12651 -9576)>(11014 -8265)) and (v104==(2 + (510 -(51 + 455))))) then if (((1031 + 650 + 609)<(1315 + 2365)) and v101[v103[2 + 0 ]]) then v68=v68 + 1 + 0 ;else v68=v103[1 + 2 ];end else v101[v103[1420 -(82 + 1336) ]][v103[1 + (5 -3) ]]=v103[3 + 1 ];end elseif ((v104<=((22 -11) + 0 + 0)) or ((10566 -6610)<(511 + 113))) then if (((4845 -2147)<=2930) and (v104<=(1359 -(549 + 801)))) then if (((9614 -4886)>(2122 + 307)) and (v104==(14 -6))) then local v157=0 + 0 ;local v158;local v159;while true do if ((v157==((909 + 857) -(580 + 1185))) or ((3763 -((220 -(30 + 99)) + 1377))>=(542 + 2295))) then while true do if (((637 + 1084)==(1035 + 686)) and ((691 -(212 + 479))==v158)) then v159=v103[2 + 0 ];v101[v159](v13(v101,v159 + (498 -(30 + 467)) ,v103[(2851 -1538) -(1095 + 215) ]));break;end end break;end if (((1902 -(1415 + 487))==v157) or ((5964 -1726)==(3005 -(65 + 25)))) then v158=0 + 0 ;v159=nil;v157=1 + 0 + 0 ;end end else v101[v103[2 + 0 ]][v103[945 -(816 + 87 + 39) ]]=v101[v103[7 -3 ]];end elseif ((v104>(632 -(248 + 374))) or ((3852 -(23 + (1774 -527)))==(3656 -2465))) then local v162=1366 -(385 + 981) ;local v163;local v164;while true do if (((3271 -(3450 -(137 + 1107)))<=(2905 -1558)) and (v162==(1 -0))) then while true do if ((v163==(0 -0)) or ((547 + 2218)<=(2511 -(1141 + 665)))) then v164=v101[v103[(1 -0) + 3 ]];if ( not v164 or ((531 + 427)<=(67 + 403))) then v68=v68 + 1 + 0 + 0 ;else local v291=1905 -(937 + 968) ;local v292;while true do if ((v291==(0 -0)) or ((4763 -(434 + 35))==(1852 + 2130))) then v292=0 -0 ;while true do if (((1147 -(163 + 622))<(4856 -3212)) and ((603 -(600 + 3))==v292)) then v101[v103[2]]=v164;v68=v103[2 + 1 ];break;end end break;end end end break;end end break;end if ((v162==(0 -0)) or ((68 + 1379)>=(3794 -(84 + 1304)))) then v163=0;v164=nil;v162=(2 + 0) -1 ;end end else local v165=0 + 0 ;local v166;local v167;local v168;local v169;local v170;while true do if (((1578 -1057)>=(1074 -732)) and (v165==(122 -(23 + (1207 -(617 + 493)))))) then v170=nil;while true do if (((1999 -(886 + 1112))==v166) or ((2452 -(1167 + 722))>(2553 -615))) then v69=(v169 + v167) -(2 -1) ;v170=196 -(63 + 133) ;v166=1 + (1 -0) ;end if ((1304==(2409 -(674 + 431))) and (v166==(1 + 1))) then for v276=v167,v69 do local v277=0 + 0 + 0 ;local v278;while true do if (((6135 -(29 + 1400))>(1116 + 1446)) and (v277==(319 -(263 + 56)))) then v278=0 + 0 + 0 ;while true do if (((847 -(538 + 304))==(12 -7)) and (v278==(0 + 0))) then v170=v170 + ((2 -0) -1) ;v101[v276]=v168[v170];break;end end break;end end end break;end if (((5788 -3997)>=(1761 -1246)) and ((0 -0)==v166)) then local v258=(981 -(180 + 801)) + 0 ;while true do if (((3493 -(305 + 192))>=373) and (v258==(0 + 0))) then v167=v103[2 + 0 ];v168,v169=v98(v101[v167](v13(v101,v167 + (1499 -(860 + (1418 -780))) ,v103[2 + 1 ])));v258=814 -(690 + 123) ;end if (((5759 -4220)>(29 + 269)) and (v258==(1 + 0))) then v166=1;break;end end end end break;end if ((v165==(0 + 0)) or (1445==(11465 -6831))) then v166=0 + 0 ;v167=nil;v165=1 -0 ;end if (((4872 -2494)>(1532 -649)) and (v165==(1 + 0 + 0))) then v168=nil;v169=nil;v165=2 + 0 ;end end end elseif ((v104<=(42 -29)) or ((4956 -(316 + 1594))>=(4743 -1621))) then if ((v104>(49 -37)) or ((5308 -(948 + 152))<(4314 -(110 + 994)))) then local v171=(200 + 850) -(353 + 697) ;local v172;local v173;local v174;local v175;while true do if (((980 + 2970)>(5162 -3695)) and (v171==(706 -((1294 -760) + 64 + 107)))) then v174=nil;v175=nil;v171=2 + 0 ;end if (((2614 -658)>=((2380 -(1541 + 145)) + 730)) and (v171==((6 -4) + 0))) then while true do if (((1098 + 198)<(808 + 3181)) and (v172==(1 -0))) then v175=1027 -(596 + 64 + 367) ;for v279=v173,v103[1962 -(465 + 1306 + 187) ] do local v280=0 -0 ;local v281;while true do if ((v280==(0 + 0)) or ((203 + 1815)>3247)) then v281=0 -0 ;while true do if (((3723 -1074)<=(4600 -(106 + 943))) and (v281==(196 -(80 + 45 + 71)))) then v175=v175 + ((812 + 443) -((1383 -756) + 627)) ;v101[v279]=v174[v175];break;end end break;end end end break;end if ((v172==(0 + 0)) or ((664 + 873)<=(474 -224))) then local v259=(1868 -(1342 + 196)) -(259 + 71) ;while true do if (((595 + 3524)>((2816 + 706) -1141)) and ((1 + 0)==v259)) then v172=2 -1 ;break;end if (((5605 -(1094 + 345 + 414))>=(2689 -(158 + 1470))) and (((0 + 0) -0)==v259)) then v173=v103[(3 -1) -0 ];v174={v101[v173](v13(v101,v173 + (1089 -(677 + 411)) ,v69))};v259=2 -1 ;end end end end break;end if (((3520 -(1137 + 203))==(3401 -(5 + (3117 -1901)))) and (v171==((0 -0) -(0 + 0)))) then v172=0 -0 ;v173=nil;v171=1209 -(788 + 420) ;end end else v101[v103[2]]={};end elseif ((v104<=(189 -(71 + 104))) or ((2837 + 1857)<=(2112 + 709 + 884))) then local v177=v103[748 -(411 + 335) ];local v178=v103[15 -11 ];local v179=v177 + (1212 -(151 + (2971 -(989 + 923)))) ;local v180={v101[v177](v101[v177 + (1094 -((1728 -(228 + 627)) + (800 -580))) ],v101[v179])};for v228=1 + 0 ,v178 do v101[v179 + v228 ]=v180[v228];end local v181=v180[1885 -(53 + 805 + 1026) ];if (v181 or ((2480 + 658)<=740)) then local v236=0 + 0 ;local v237;local v238;while true do if ((v236==(0 -(367 -(361 + 6)))) or ((2705 -(109 + 378 + 104))>(10440 -6273))) then v237=919 -(78 + 841) ;v238=nil;v236=(1107 -(27 + 419)) -(280 + 380) ;end if ((v236==(1 -0)) or (((11752 -7000) -3483)>=(1214 + 1261))) then while true do if ((v237==0) or ((8954 -5761)<(3566 -2204))) then v238=1132 -(65 + 1067) ;while true do if ((v238==(0 -0)) or ((2058 -1390)>(2275 + 503))) then v101[v179]=v181;v68=v103[3];break;end end break;end end break;end end else v68=v68 + (324 -(318 + 5)) ;end elseif ((v104==((17 -9) + 7)) or ((6295 -(1269 + 332))<(2366 + (1713 -1093)))) then local v239=0 -(0 -0) ;local v240;local v241;local v242;while true do if (((2053 -(907 + 184))==(2492 -((1783 -1173) + 920))) and (v239==(1148 -(686 + 462)))) then v240=1395 -(748 + 647) ;v241=nil;v239=112 -(83 + 28) ;end if ((v239==((118 -72) -((297 -(37 + 218)) + 3))) or ((21 + 256)>=(814 + 652))) then v242=nil;while true do if ((v240==(0 -0)) or ((1172 -(314 + 188))>=(5065 -(1251 + 340)))) then local v293=0 + 0 ;while true do if (((2608 + 1404)>=(2764 + 739)) and (v293==((103 + 1825) -(638 + 191 + 1099)))) then v241=0 -0 ;v242=nil;v293=(2 + 0) -1 ;end if ((((61797 -48286) -(10648 -(836 + 871)))>(1524 -(34 + 142))) and (v293==(1 + 0))) then v240=1 + 0 ;break;end end end if ((v240==(1118 -(68 + 1049))) or ((3051 -(895 + 530))>=(4368 -(1270 + (1293 -575))))) then while true do if (((499 + 414)==((4485 -(1676 + 201)) -1695)) and (v241==(1723 -(239 + 1484)))) then v242=v103[1252 -(1024 + 226) ];v101[v242]=v101[v242](v101[v242 + (1741 -(300 + 1440)) + 0 ]);break;end end break;end end break;end end else v101[v103[2 + 0 ]]=v101[v103[5 -2 ]];end elseif ((v104<=(6 + 19)) or ((1910 + 191)==(2495 -(704 + 1199)))) then if (((5556 -(5777 -(340 + 1019)))<=(331 + 4002)) and (v104<=20)) then if ((v104<=(10 + 8)) or ((1199 + 2446)<=(2812 -(368 + 1253)))) then if ((v104==(30 -13)) or ((3612 -(822 + 503))<(3086 -1041))) then local v182=0 -0 ;local v183;local v184;local v185;while true do if (((6116 -(1529 + 377))>(96 + 833)) and (0==v182)) then v183=0 + 0 ;v184=nil;v182=1529 -(788 + 740) ;end if (((3209 -(228 + 907))<=(3950 -(71 + 150))) and (v182==1)) then v185=nil;while true do if ((v183==0) or (((5094 -2571) -(347 + 303))>(5253 -2927))) then local v260=0 + 0 ;while true do if ((v260==(3 -2)) or ((4048 -(4797 -(456 + 1354)))<=(214 + 468))) then v183=2 -1 ;break;end if ((v260==(0 + 0)) or ((4847 -(302 + 83))<(11099 -8041))) then local v299=1134 -(518 + 616) ;while true do if (((3085 -(1044 + 547))<(4438 -836)) and (0==v299)) then v184=v103[1097 -(109 + 986) ];v185=v101[v184];v299=1 -0 ;end if ((v299==(4 -3)) or ((7 -(542 -(255 + 282)))>(2227 -((3070 -2045) + 194)))) then v260=(1071 -(1048 + 22)) + 0 ;break;end end end end end if ((v183==(1 + 0)) or ((3782 -(38 + 48))>(3803 + 35))) then for v282=v184 + (1 -0) ,v103[1 + (934 -(104 + 828)) ] do v7(v185,v101[v282]);end break;end end break;end end else local v186=0 + 0 ;local v187;local v188;local v189;local v190;while true do if ((v186==(317 -(289 + 27))) or ((4181 -(644 + 196))>(2578 + 1148))) then v189=nil;v190=nil;v186=2;end if ((v186==(231 -(64 + (1756 -(679 + 910))))) or ((2341 + 883)>(5641 -(696 + 384)))) then v187=0 -0 ;v188=nil;v186=1 + 0 ;end if (((36 + 4)<(772 + 899)) and (v186==(1184 -(112 + 1070)))) then while true do if (((1959 + 279)>(1030 + 1001)) and (v187==(438 -(8 + 430)))) then v188=v103[2 -(0 + 0) ];v189=v101[v188 + 1 + 1 ];v187=1 + 0 ;end if (((4685 -((2175 -(8 + 1186)) + 399))==(9579 -6274)) and ((499 -(17 + 480))==v187)) then if (((843 + 949)<(558 + 2250)) and (v189>(0 -0))) then if (((196 + 450)>(2312 -(4007 -2224))) and (v190<=v101[v188 + (375 -(290 + 84)) ])) then local v318=453 -(423 + 30) ;local v319;local v320;while true do if (((3618 + 1322)>(6094 -2539)) and (v318==(1670 -(452 + 1218)))) then v319=1736 -(1362 + 374) ;v320=nil;v318=1 + 0 ;end if ((v318==(910 -(491 + 418))) or ((1564 -1223)>=(5023 -2907))) then while true do if (((6991 -3499)<(1227 + 1427 + 1589)) and (v319==(531 -(133 + 398)))) then v320=0 + 0 ;while true do if ((v320==(590 -(302 + 288))) or (3902<=(151 + 515))) then v68=v103[7 -4 ];v101[v188 + 2 + 1 ]=v190;break;end end break;end end break;end end end elseif ((v190>=v101[v188 + (1126 -(208 + 917)) ]) or ((7707 -5331)>(4119 -(28 + 1693)))) then local v321=0 + 0 ;while true do if (((7408 -5106)<=(5153 -(198 + 376 + 305 + 624))) and (v321==(540 -((1346 -(991 + 269)) + 454)))) then v68=v103[7 -4 ];v101[v188 + 3 + (0 -0) ]=v190;break;end end end break;end if (((468 + 1204)<=(940 + 1050)) and (v187==((1 -0) + 0))) then local v263=0 + 0 ;while true do if (((4783 -2504)<(7798 -4621)) and (v263==(4 -3))) then v187=2 + 0 ;break;end if ((((1986 -(992 + 128)) + 241)==(1264 -(105 + 52))) and (v263==(0 + 0))) then v190=v101[v188] + v189 ;v101[v188]=v190;v263=1;end end end end break;end end end elseif ((v104==(2 + (52 -35))) or ((4871 -((1565 -(403 + 20)) + 730))<(3492 -((4777 -3493) + 65)))) then local v191=1014 -(248 + (3533 -2767)) ;local v192;local v193;local v194;local v195;local v196;while true do if ((v191==(589 -(527 + 61))) or ((1523 -938)==(355 -(67 + 128)))) then v194=nil;v195=nil;v191=565 -((264 -135) + 434) ;end if ((((5379 -3785) -1253)==(114 + 227)) and (v191==(2 + 0 + 0 + 0))) then v196=nil;while true do if (((112 + 920)<=(236 + 3154)) and (v192==(1039 -((589 -332) + 782)))) then local v264=0 + 0 ;while true do if (((102 + 663)<=(464 + 561)) and (v264==(0 -0))) then v193=v103[2 + 0 ];v194,v195=v98(v101[v193](v101[v193 + (1 -0) ]));v264=1624 -(740 + 445 + 438) ;end if ((v264==(1 + 0)) or ((2135 + 1688)==(46 + 344))) then v192=1 + 0 ;break;end end end if (((1 + 1)==v192) or ((97 + 1331)>=(4923 -2675))) then for v283=v193,v69 do local v284=1558 -(881 + (981 -304)) ;local v285;local v286;while true do if (((8225 -3971)>=(7461 -3462)) and (v284==(1 -0))) then while true do if ((v285==(1840 -(287 + 1553))) or ((3613 + 611)==2704)) then v286=0 + 0 ;while true do if ((v286==0) or ((1998 + 2298)==(2037 + 798 + 1556))) then v196=v196 + (3 -2) ;v101[v283]=v194[v196];break;end end break;end end break;end if (((1085 -391)<=(2029 -(73 + 27))) and (v284==((0 -0) -0))) then v285=0 -0 ;v286=nil;v284=1145 -(295 + 849) ;end end end break;end if (((1348 + 3077)>=((21882 -14583) -3594)) and (v192==(2 -1))) then local v265=0 + 0 ;while true do if (((1778 -(1382 + (677 -281)))==v265) or (3307>=(14542 -10557))) then v69=(v195 + v193) -(1235 -(717 + 517)) ;v196=828 -(178 + (2810 -2160)) ;v265=1;end if ((v265==(1 + 0)) or ((3190 + 167)<((1638 + 323) -(274 + 978)))) then v192=2 -0 ;break;end end end end break;end if ((v191==(1132 -(698 + 434))) or (((6097 -(266 + 864)) -(364 + 1350))<=(1317 -(154 + 43)))) then v192=745 -(689 + 56) ;v193=nil;v191=1 -0 ;end end else local v197=(0 + 0) -0 ;local v198;local v199;local v200;local v201;while true do if (((4505 -(369 + 1322 + 146))<((4716 -3601) + 3314)) and (v197==(1676 -(40 + 1636)))) then v198=0 -0 ;v199=nil;v197=2 -1 ;end if (((5688 -3274)<=(6863 -3579)) and (v197==(1 -0))) then v200=nil;v201=nil;v197=1002 -((2798 -(1359 + 553)) + 114) ;end if ((v197==(2 + 0)) or ((2605 -(451 + 1018))<(2093 -(1105 + 700)))) then while true do if (((538 + 3812)>=(693 -((812 -635) + 130))) and (v198==((0 -0) -0))) then local v266=0 -(0 -0) ;while true do if (((1 + 0 + 0)==v266) or ((460 + 512 + 65)>=(1315 + 272))) then v198=1 -0 ;break;end if ((v266==(1613 -(184 + 1429))) or ((1951 -(313 + 146))>=(2983 -(44 + 1135)))) then v199=v103[(46 -(38 + 3)) -3 ];v200=v101[v199];v266=383 -(325 + 57) ;end end end if (((1260 + 1650)<=(6812 -3417)) and (v198==(616 -(595 + 20)))) then v201=v103[3 -0 ];for v287=1987 -(224 + 32 + 1730) ,v201 do v200[v287]=v101[v199 + v287 ];end break;end end break;end end end elseif ((v104<=(11 + 11)) or (((10477 -6596) + 519)<(1718 -((1775 -(495 + 427)) + 1)))) then if ((v104>(678 -(604 + 53))) or ((1633 -(483 + 773))>4397)) then local v202=0;local v203;local v204;local v205;local v206;while true do if ((v202==(5 -3)) or ((570 + 896)>=((8499 + 6490) -(10622 -(296 + 11))))) then while true do if (((3438 -1242)<(8784 -3861)) and (v203==(0 -0))) then v204=(353 + 991) -(997 + 347) ;v205=nil;v203=1658 -(992 + 665) ;end if (((4798 -(320 + 431))==(1448 + 2599)) and (v203==(1196 -(1084 + 111)))) then v206=nil;while true do if (((889 + 1243 + 1966)<=(15496 -(11186 -(248 + 288)))) and (v204==(1 + 0))) then for v322=v205 + 1 + (1055 -(995 + 60)) ,v103[262 -(60 + 198) ] do v206=v206   .. v101[v322] ;end v101[v103[3 -(1 + 0) ]]=v206;break;end if (((3191 -1571)<=(28 + 2336)) and (v204==(0 + 0))) then local v305=0 + 0 + 0 ;local v306;while true do if (((3642 -(1428 + 2))>(4303 -2326)) and (v305==(0 + 0))) then v306=0 -0 ;while true do if ((v306==((2 -1) + (1510 -(935 + 575)))) or ((3821 -((4769 -3659) + 463))<=(1612 -(291 + 729)))) then v204=1 -0 ;break;end if (((4145 -(483 + 35))>(12610 -9190)) and ((0 + 0)==v306)) then local v342=0 + 0 ;while true do if (((17671 -12726)==(12333 -7388)) and (v342==(179 -(170 + 8)))) then v306=578 -(466 + 111) ;break;end if ((v342==(0 -0)) or ((2506 + 601)<((3630 -(141 + 373)) -(114 + 360)))) then v205=v103[1417 -(1051 + 363) ];v206=v101[v205];v342=1 + 0 ;end end end end break;end end end end break;end end break;end if (((7653 -(4121 -(819 + 287)))==(545 + 4093)) and (v202==(1 -0))) then v205=nil;v206=nil;v202=1045 -(771 + 272) ;end if ((v202==(0 -0)) or ((7265 -(3245 -(132 + 285)))>=(6056 -(782 + 353)))) then v203=0 + 0 ;v204=nil;v202=1928 -(1183 + (2332 -(1049 + 539))) ;end end else v101[v103[2]]=v29(v96[v103[(1644 -(783 + 854)) -4 ]],nil,v63);end elseif (((3382 -(144 + 191))>(1386 -756)) and (v104<=(851 -(558 + 270)))) then local v208=970 -(954 + 16) ;local v209;local v210;local v211;while true do if (((11338 -7503)>=3720) and (v208==(1 + 0))) then v211=nil;while true do if (((87 + 64 + 293)<(5889 -2176)) and (v209==(999 -(881 + 118)))) then v210=215 -(71 + 144) ;v211=nil;v209=1 + 0 ;end if ((v209==(1 -(0 + 0))) or ((5017 -(89 + 197))<((15346 -10609) -2770))) then while true do if (((696 + 2320)<=(5955 -2148)) and (v210==(0 -(0 + 0)))) then v211=v103[2 + 0 ];v101[v211](v101[v211 + (3 -2) ]);break;end end break;end end break;end if (((709 -(91 + 125))==493) and (v208==(0 + 0 + 0))) then v209=(1765 -(141 + 151)) -(792 + (1858 -(163 + 1014))) ;v210=nil;v208=1;end end elseif ((v104==(55 -31)) or (((4992 -(214 + 1310)) + 1325)>(5210 -(303 + 22)))) then for v252=v103[1 + 1 ],v103[970 -((398 -175) + 744) ] do v101[v252]=nil;end else v101[v103[(2 + 4) -(7 -3) ]]();end elseif (((1057 + 658)<((4235 -1721) -(137 + 43))) and (v104<=(88 -59))) then if ((v104<=(545 -(275 + 243))) or ((370 + 4565)<(2417 + 18))) then if ((v104==(91 -(887 -(749 + 73)))) or ((1867 -(752 + 223))==263)) then local v212=0 + 0 ;local v213;local v214;while true do if ((v212==(0 + 0)) or ((5280 -(683 + 1122))>(5340 -((294 -(80 + 96)) + 380)))) then v213=0 -0 ;v214=nil;v212=2 -1 ;end if ((v212==(1 + 0)) or ((6134 -2580)>=(590 + 3474))) then while true do if (((863 + 96 + 130)<=(6347 -(19 + 1407))) and (v213==(0 + 0 + 0))) then v214=v103[4 -2 ];v101[v214]=v101[v214](v13(v101,v214 + (305 -(164 + 140)) ,v69));break;end end break;end end else v101[v103[1588 -(128 + 1458) ]]=v101[v103[7 -4 ]][v103[17 -13 ]];end elseif ((v104==(16 + 12)) or ((1894 + 2423)<=(8842 -5268))) then if (((763 + 450)<=(4015 -(153 + 588))) and  not v101[v103[2 -0 ]]) then v68=v68 + 1 + 0 ;else v68=v103[57 -(7 + (1384 -(839 + 498))) ];end else local v217=532 -(367 + (2074 -(210 + 1699))) ;local v218;local v219;while true do if ((v217==(519 -(437 + 82))) or (2813==(1148 -523))) then v218=0 + 0 ;v219=nil;v217=1382 -(916 + 465) ;end if ((v217==1) or ((4349 -(507 + 506))==(3924 -((1781 -(144 + 1073)) + 237)))) then while true do if (((650 + 97 + (3684 -(995 + 725)))<(4045 -(830 + 164))) and (v218==(0 -0))) then v219=v103[2 + 0 ];v101[v219]=v101[v219]();break;end end break;end end end elseif (((2518 -(463 + 24 + 977))>=(1634 -((511 -218) + 964))) and (v104<=(1575 -(697 + 847)))) then if (((437 -(2051 -(425 + 1453)))<(2930 + 2022)) and (v104==(5 + 25))) then do return;end else local v220=0 -0 ;local v221;local v222;local v223;while true do if ((v220==(0 -0)) or ((5249 -3896)>=(4174 -(695 + 1265)))) then v221=0 + 0 ;v222=nil;v220=1 + 0 ;end if ((v220==(1174 -(905 + 268))) or ((3711 -(230 + 108))>=(5845 -1458))) then v223=nil;while true do if ((v221==(0 -0)) or (((6189 -(503 + 791)) -(688 + 462))==4822)) then local v272=0 + 0 ;while true do if ((v272==(1737 -(225 + 1512))) or ((2146 -(423 + 818))>(4172 -((2668 -(401 + 657)) + 225)))) then v222=v103[(2 + 0) -0 ];v223=v101[v103[(1151 -340) -(107 + 701) ]];v272=1 + 0 ;end if (((2734 -(187 + 66 + 826))<(16086 -(13948 -(867 + 408)))) and ((2 -1)==v272)) then v221=1 -0 ;break;end end end if ((((3183 -(430 + 256)) + 11)>(1955 -(115 + 324))) and (v221==(1323 -(312 + 1010)))) then v101[v222 + (1 -0) ]=v223;v101[v222]=v223[v103[4]];break;end end break;end end end elseif ((v104<=(141 -109)) or ((5282 -(1198 + 205))<(6754 -5246))) then v101[v103[2 + 0 ]]=v63[v103[(3 + 1) -1 ]];elseif ((((2497 -(28 + 22)) -(486 + 1241))<=(6274 -2871)) and (v104==(131 -98))) then local v246=798 -(763 + 35) ;local v247;local v248;local v249;while true do if (((2059 -((1711 -(781 + 689)) + 42))<=((934 + 4000) -((493 -(82 + 73)) + 168))) and (v246==(0 + 0))) then v247=0 -0 ;v248=nil;v246=(1 -0) -0 ;end if ((v246==(1 + 0)) or ((5321 -(29 + 1232 + 180))<(4194 -(317 + 144)))) then v249=nil;while true do if ((v247==(0 + 0)) or ((4401 -(149 + 1471))<(3490 -(1075 + 913)))) then local v294=0 -0 ;while true do if (((2349 -(301 + 67))<(3301 -(98 + 759))) and (v294==((2293 -(130 + 371)) -(1323 + 469)))) then v248=0 + 0 ;v249=nil;v294=(1211 + 764) -(26 + 1948) ;end if ((v294==(3 -2)) or ((1807 + 2990)==(2070 + 221))) then v247=1 + 0 ;break;end end end if (((2038 -594)<(6124 -(1263 + 316))) and ((1089 -(63 + 1025))==v247)) then while true do if ((((0 -0) + 0)==v248) or ((1198 + 25 + 755)==(516 + 1515))) then v249=v103[(5191 -3764) -(445 + 980) ];v101[v249]=v101[v249](v13(v101,v249 + (244 -(27 + 216)) ,v103[3 + 0 ]));break;end end break;end end break;end end else v63[v103[10 -7 ]]=v101[v103[3 -1 ]];end v68=v68 + 1 + 0 ;break;end end break;end end break;end end end end v67=3;end if (v67==0) then v68=1;v69= -1;v67=1;end if (3==v67) then A,B=v27(v11(v72));if  not A[1] then local v109=0;local v110;while true do if (v109==0) then v110=v61[4][v68] or "?" ;error("Script error at ["   .. v110   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
