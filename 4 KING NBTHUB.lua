do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v73=(v31/((5 -(895 -(107 + 785)))^(v32-(1 + 0))))%((2 -0)^(((v33-(1925 -(586 + 1338))) -(v32-1)) + 1)) ;return v73-(v73%(1 -(1163 -(107 + 1056)))) ;else local v74=0 + 0 ;local v75;while true do if (v74==(0 -0)) then v75=(6 -4)^(v32-(1 + 0)) ;return (((v31%(v75 + v75))>=v75) and ((897 -(829 + 66)) -(990 -(949 + 40)))) or (1434 -(200 + 1234)) ;end end end end v22=nil;v18=2;end if (6==v18) then v29=nil;function v29()local v34=0 -0 ;local v35;local v36;local v37;local v38;local v39;local v40;local v41;local v42;while true do if (v34==(11 -7)) then while true do if (v35==2) then local v98=0;while true do if (v98~=(459 -(199 + 259))) then else v35=5 -2 ;break;end if (v98~=(664 -(145 + 519))) then else v40=nil;v41=nil;v98=1;end end end if (v35~=1) then else v38=nil;v39=nil;v35=3 -1 ;end if (v35==(1554 -(716 + 838))) then local v99=0;while true do if (v99==1) then v35=1;break;end if (v99~=(0 -0)) then else v36=0;v37=nil;v99=1;end end end if (v35==3) then v42=nil;while true do local v101=0;while true do if (v101==(1016 -(642 + 374))) then if (v36~=(1572 -(284 + 1285))) then else local v104=0 + 0 ;while true do if (v104==0) then local v109=0 + 0 ;while true do if (v109==(831 -(191 + 640))) then for v229=1,v24() do v38[v229-(1 + 0) ]=v29();end for v231=1222 -(348 + 873) ,v24() do v39[v231]=v24();end v109=1;end if (v109~=(1226 -(11 + 1214))) then else v104=1;break;end end end if (v104~=1) then else return v40;end end end if (v36==(2 + 0)) then local v105=0;while true do if (v105~=1) then else for v111=1,v24() do local v112=0;local v113;local v114;while true do if (v112~=1) then else while true do if (v113==0) then v114=v22();if (v21(v114,2 -1 ,1401 -(558 + 842) )==0) then local v287=0;local v288;local v289;local v290;local v291;while true do if (v287~=(0 -0)) then else v288=714 -(161 + 553) ;v289=nil;v287=1;end if (v287==(7 -5)) then while true do if (v288~=(1 + 2)) then else if (v21(v290,3,3 -0 )~=1) then else v291[843 -(348 + 491) ]=v42[v291[4 + 0 ]];end v37[v111]=v291;break;end if (v288==(2 + 0)) then local v351=0;local v352;while true do if (v351==0) then v352=1894 -(58 + 1836) ;while true do if (v352==(1978 -(324 + 1653))) then v288=3;break;end if (v352~=(0 + 0)) then else local v391=0 + 0 ;while true do if (v391==(1 + 0)) then v352=1 + 0 ;break;end if (v391==(0 + 0)) then if (v21(v290,1,1 + 0 )~=1) then else v291[2]=v42[v291[2]];end if (v21(v290,4 -2 ,5 -3 )==1) then v291[1412 -(953 + 456) ]=v42[v291[1706 -(797 + 906) ]];end v391=2 -1 ;end end end end break;end end end if ((0 -0)==v288) then v289=v21(v114,886 -(633 + 251) ,3);v290=v21(v114,4,6);v288=1 -0 ;end if (v288==1) then local v353=0;local v354;while true do if (v353~=0) then else v354=0;while true do if (v354~=(0 + 0)) then else local v392=617 -(125 + 492) ;while true do if (v392~=(242 -(213 + 29))) then else v291={v23(),v23(),nil,nil};if (v289==(732 -(141 + 591))) then local v403=199 -(41 + 158) ;while true do if (v403==(0 + 0)) then v291[3]=v23();v291[4]=v23();break;end end elseif (v289==1) then v291[3]=v24();elseif (v289==2) then v291[1476 -(769 + 704) ]=v24() -(2^(549 -(187 + 346))) ;elseif (v289~=3) then else local v411=0;while true do if (v411~=0) then else v291[3]=v24() -((9 -7)^16) ;v291[513 -(224 + 285) ]=v23();break;end end end v392=1 -0 ;end if (v392==(3 -2)) then v354=1041 -(919 + 121) ;break;end end end if (v354~=(1 + 0)) then else v288=2;break;end end break;end end end end break;end if (v287==1) then local v329=0;while true do if (v329==(1 -0)) then v287=2;break;end if (v329~=0) then else v290=nil;v291=nil;v329=1 + 0 ;end end end end end break;end end break;end if ((1324 -(1031 + 293))==v112) then v113=0 + 0 ;v114=nil;v112=1;end end end v36=3 -0 ;break;end if (v105~=(0 -0)) then else for v115=1,v41 do local v116=0;local v117;local v118;while true do if (v116==(0 -0)) then local v233=0;local v234;while true do if (v233==(0 -0)) then v234=0 -0 ;while true do if (v234~=(1648 -(1382 + 266))) then else local v300=0;while true do if (v300==(1081 -(474 + 607))) then v117=v22();v118=nil;v300=1;end if (v300~=(3 -2)) then else v234=1 -0 ;break;end end end if (v234==1) then v116=1 + 0 ;break;end end break;end end end if (v116~=(2 -1)) then else if (v117==1) then v118=v22()~=(657 -(176 + 481)) ;elseif (v117==2) then v118=v25();elseif (v117==3) then v118=v26();end v42[v115]=v118;break;end end end v40[3]=v22();v105=1;end end end v101=1;end if ((1 + 0)==v101) then if (v36==(0 + 0)) then local v106=1762 -(1306 + 456) ;local v107;while true do if (v106==0) then v107=0 -0 ;while true do if (v107==(3 -2)) then v39={};v36=1 + 0 ;break;end if (v107~=(955 -(716 + 239))) then else local v196=0;while true do if (v196==1) then v107=1;break;end if (0~=v196) then else v37={};v38={};v196=1;end end end end break;end end end if (v36==1) then local v108=577 -(337 + 240) ;while true do if (v108==(1698 -(1522 + 175))) then v42={};v36=3 -1 ;break;end if (v108==(0 + 0)) then v40={v37,v38,nil,v39};v41=v24();v108=1;end end end break;end end end break;end end break;end if (v34~=(4 -2)) then else v39=nil;v40=nil;v34=3;end if (v34~=3) then else v41=nil;v42=nil;v34=15 -11 ;end if (v34~=1) then else v37=nil;v38=nil;v34=2 + 0 ;end if ((0 + 0)~=v34) then else v35=0 -0 ;v36=nil;v34=1 -0 ;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v43=v24();local v44=v24();local v45=1291 -(660 + 630) ;local v46=(v21(v44,1,34 -14 ) * (((1737 + 17) -(1345 + (1766 -1359)))^32)) + v43 ;local v47=v21(v44,11 + 10 ,1819 -(167 + 1621) );local v48=((v21(v44,(28 -7) + 11 )==(1 -0)) and  -1) or (1 + 0) ;if (v47==(0 -0)) then if (v46==(392 -(101 + 291))) then return v48 * (1906 -(1448 + 458)) ;else v47=1 + 0 ;v45=0 + 0 ;end elseif (v47==((9931 -6322) -(184 + (1782 -(125 + 279))))) then return ((v46==(0 -0)) and (v48 * ((3 -(2 -0))/0))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/(((1 -0) + 1)^(90 -38)))) ;end v26=nil;function v26(v49)local v50=310 -(285 + 25) ;local v51;local v52;while true do if (v50==((1775 -(279 + 1496)) + 0)) then v51=nil;if  not v49 then v49=v24();if (v49==(1955 -(778 + 1177))) then return "";end end v50=(562 -(179 + 30)) -(136 + 216) ;end if ((1233 -(759 + 383 + 89))==v50) then v52={};for v90=3 -2 , #v51 do v52[v90]=v2(v1(v3(v51,v90,v90)));end v50=3;end if ((1 + 2)==v50) then return v6(v52);end if (v50==(633 -(497 + 57 + 78))) then v51=v3(v16,v19,(v19 + v49) -((2 + 0) -1) );v19=v19 + v49 ;v50=735 -(96 + 637) ;end end end v18=5;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v53)if (v1(v53,2)==79) then v20=v0(v3(v53,1,1));return "";else local v76=v2(v0(v53,16));if v20 then local v92=0;local v93;while true do if (v92==1) then return v93;end if (v92==0) then v93=v5(v76,v20);v20=nil;v92=1;end end else return v76;end end end);v18=1;end if (v18==2) then function v22()local v54=0;local v55;while true do if (v54==(1591 -(1024 + 566))) then return v55;end if ((1666 -(1354 + 312))==v54) then v55=v1(v16,v19,v19);v19=v19 + 1 + 0 + 0 ;v54=1 + 0 ;end end end v23=nil;function v23()local v56,v57=v1(v16,v19,v19 + 2 );v19=v19 + (1510 -(691 + 817)) ;return (v57 * (80 + 176)) + v56 ;end v18=3;end if (v18==3) then v24=nil;function v24()local v58,v59,v60,v61=v1(v16,v19,v19 + 3 );v19=v19 + (6 -2) ;return (v61 * 16777216) + (v60 * (117199 -51663)) + (v59 * (1082 -826)) + v58 ;end v25=nil;v18=4;end if (v18==7) then function v30(v62,v63,v64)local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v12("#",...) -1 ;local function v72()local v77=v65;local v78=v66;local v79=v67;local v80=v28;local v81={};local v82={};local v83={};for v87=0,v71 do if ((v87>=v79) or ((5138 -(95 + 242))<=(1846 -1107))) then v81[v87-v79 ]=v70[v87 + 1 ];else v83[v87]=v70[v87 + (1586 -(1266 + 319)) ];end end local v84=(v71-v79) + (1 -0) ;local v85;local v86;while true do local v88=0;while true do if ((v88==(0 -0)) or ((276 + 119)==(4649 -(4421 -(545 + 913))))) then local v100=0 + 0 ;while true do if ((v100==1) or ((2036 + 938)==(2152 -1590))) then v88=2 -1 ;break;end if (((4307 + 257)<(6202 -(1173 + 236))) and (v100==(1650 -(589 + 1061)))) then v85=v77[v68];v86=v85[1 -(0 + 0) ];v100=1;end end end if (((564 + 179)<=(3288 -(7 + 61 + 353))) and (v88==(401 -(109 + 291)))) then if ((3405>(1577 -(516 + 698))) and (v86<=18)) then if (((989 -552)<=(3095 -(1241 + 203))) and (v86<=(4 + 4))) then if (((70 + 1284)<=(889 + 3643)) and (v86<=(1 + 2))) then if ((v86<=(1 + 0)) or ((2885 -(392 + 767))>(3896 -((2319 -(628 + 1222)) + 150)))) then if (((5082 -(758 + 962))>=(1263 + 169)) and (v86>(0 -0))) then v83[v85[1344 -(134 + 1208) ]]=v63[v85[1637 -((1675 -(561 + 835)) + (1853 -(90 + 408))) ]];else local v121=1597 -(254 + 1343) ;local v122;local v123;local v124;local v125;local v126;while true do if ((v121==0) or ((1687 -(461 + 784))==(9421 -(10217 -3373)))) then v122=0 + 0 ;v123=nil;v121=2 -(1 + 0) ;end if (((5558 -3349)>(722 + 326)) and (v121==(2 + 0))) then v126=nil;while true do if ((((125 + 1022) -710)<=2693) and (v122==(2 + 0))) then while true do if (((5108 -(1394 + 344))<4544) and (v123==(1 + 0))) then v126=508 -(476 + 32) ;for v314=v124,v85[11 -7 ] do local v315=0 + 0 ;while true do if ((v315==(0 -(0 -0))) or ((2667 -(306 + 637))<(2962 -2310))) then v126=v126 + 1 + 0 ;v83[v314]=v125[v126];break;end end end break;end if ((v123==(0 -0)) or (2082==(8384 -6125))) then local v301=0;local v302;while true do if ((v301==(0 + (956 -(266 + 690)))) or ((2607 + 1074)>(2396 + 2348))) then v302=0 + 0 ;while true do if ((((23387 -9097) -10232)<(6993 -2902)) and (v302==1)) then v123=439 -(40 + 398) ;break;end if (((0 -0)==v302) or ((1690 + 608)<=(1967 -1421))) then local v364=0 + 0 ;while true do if ((v364==(1 + 0)) or ((5994 -2602)==(2005 -(504 + 142)))) then v302=1 + 0 ;break;end if (((1069 + 562)<((3033 + 745) -(4 + 1337))) and (v364==(0 + 0))) then v124=v85[2];v125={v83[v124](v13(v83,v124 + (1 -0) ,v69))};v364=1 + 0 ;end end end end break;end end end end break;end if ((4428>=2235) and (v122==(4 -3))) then local v250=0 -0 ;while true do if (((850 -(651 + 37))==(405 -(700 -457))) and (v250==1)) then v122=6 -(531 -(385 + 142)) ;break;end if (((544 + 1781)>(1528 -(256 + 90))) and (v250==(0 + 0))) then v125=nil;v126=nil;v250=(2 + 0) -1 ;end end end if (((0 -0)==v122) or ((3231 -(254 + 1720))==751)) then local v251=0 -(0 + 0) ;while true do if (((17189 -12455)==(2451 + 2283)) and (v251==0)) then v123=0 -0 ;v124=nil;v251=2 -1 ;end if ((1==v251) or ((1502 -(1226 + (1186 -(33 + 976))))>=4804)) then v122=1 -0 ;break;end end end end break;end if ((((21045 -15677) -(1044 + 877))==3447) and (v121==(2 -1))) then v124=nil;v125=nil;v121=29 -(17 + 10) ;end end end elseif ((v86>2) or ((415 + (2012 -(44 + 171)))==((11342 -5660) -1675))) then v68=v85[1719 -(401 + 1315) ];else v83[v85[1966 -(589 + 1375) ]]=v85[1340 -(479 + 858) ];end elseif ((v86<=5) or (((18515 -(281 + 1459)) -11827)<=(8267 -4974))) then if ((v86==((8 + 0) -4)) or (3857<=(4501 -3572))) then local v130=0;local v131;local v132;local v133;local v134;while true do if ((v130==(2 -(1 -0))) or (((4265 -1735) + 997)>(20404 -15970))) then v133=nil;v134=nil;v130=(305 -(244 + 57)) -(2 + 0) ;end if (((3800 -(708 + 241))>=(2125 -(567 + 517))) and (((88 -(38 + 50)) -(0 + 0))==v130)) then v131=954 -(552 + 402) ;v132=nil;v130=1;end if (((431 -233)<=(1689 -(1097 + 388))) and (v130==(5 -3))) then while true do if ((((756 -372) + 60)<3484) and (v131==((2 -1) + 0 + 0))) then v134=v85[(41 -(33 + 4)) -1 ];for v275=2 -1 ,v134 do v133[v275]=v83[v132 + v275 ];end break;end if ((v131==0) or ((6341 -3827)>=(10615 -6622))) then v132=v85[3 -1 ];v133=v83[v132];v131=1035 -(342 + 692) ;end end break;end end else v83[v85[6 -4 ]]();end elseif (((2923 -(498 + 246))<=(7132 -2721)) and (v86<=((1019 -(455 + 549)) -9))) then v83[v85[2]][v85[10 -7 ]]=v85[1913 -(816 + 1093) ];elseif (((12423 -9754)>=(2675 -(377 + 1187))) and (v86==(1527 -(1017 + 503)))) then v83[v85[6 -(4 + 0) ]]=v83[v85[2 + 1 ]][v85[4 + 0 ]];elseif (((4418 -(48 + 592))>=(4621 -(1299 + 654))) and v83[v85[8 -6 ]]) then v68=v68 + 1 + 0 ;else v68=v85[346 -(295 + 29 + 19) ];end elseif ((v86<=(1139 -(237 + 889))) or ((1867 + 2212)<=194)) then if (((275 + 1825)==(2858 -(385 + 373))) and (v86<=10)) then if ((v86>(1528 -(1295 + 224))) or ((4853 -2250)<(2496 -1078))) then local v137=0;local v138;local v139;local v140;while true do if ((v137==(1625 -(389 + 1236))) or ((5254 -(420 + 696))<=((22920 -10551) -8263))) then local v236=0;while true do if ((v236==(1 + 0)) or ((899 -(766 + 36))<=(1505 -(489 + 923)))) then v137=3 -2 ;break;end if (((893 + 874 + 587)>(3022 -(1167 + 728))) and (v236==0)) then v138=1014 -(11 + 1003) ;v139=nil;v236=1 -0 ;end end end if ((4002>=(3578 -2309)) and (v137==(1 + 0))) then v140=nil;while true do if (((197 -((407 -214) + 3))==v138) or ((5332 -(884 + 451))<=(200 + 640))) then v83[v139 + 1 ]=v140;v83[v139]=v140[v85[692 -(379 + 309) ]];break;end if ((3221>(2503 + 465)) and (v138==(0 -0))) then local v258=0 -(1124 -(400 + 724)) ;while true do if ((((11247 -8242) -(581 + 645))>=(3878 -3059)) and (v258==(0 + 0))) then local v303=0 + 0 ;while true do if (((13077 -(34084 -25178))>2499) and (v303==0)) then v139=v85[6 -(866 -(64 + 798)) ];v140=v83[v85[7 -4 ]];v303=(1717 -1268) -(399 + 49) ;end if ((v303==(1 + 0)) or (1559>=(6017 -(730 + 758)))) then v258=1 + 0 ;break;end end end if ((v258==(1 + 0)) or ((4686 -(613 + 7))<=(601 + 651))) then v138=1022 -((525 -372) + 868) ;break;end end end end break;end end else local v141=0 + 0 ;local v142;local v143;local v144;while true do if ((v141==(1516 -(365 + 1150))) or (1328==(4281 + 661))) then v144=nil;while true do if (((1612 + 374)==1986) and (v142==(944 -(879 + (244 -180))))) then while true do if (((1916 -(552 + 142))<=(270 + 1210)) and (v143==(221 -(35 + 186)))) then v144=v83[v85[4]];if (((3591 -2677)>=541) and  not v144) then v68=v68 + (119 -(85 + 33)) ;else local v330=0 -0 ;while true do if ((v330==(0 -0)) or ((902 + 3105)<=1816)) then v83[v85[2]]=v144;v68=v85[1788 -((3520 -2275) + 540) ];break;end end end break;end end break;end if (((1991 -(11 + 679))<(5868 -1953)) and (v142==((1954 -629) -(1137 + 188)))) then local v259=1987 -(1830 + (353 -196)) ;while true do if ((((6927 -(355 + 8)) -4163)>=(9275 -6914)) and (v259==(2 -(3 -2)))) then v142=2 -1 ;break;end if (((4159 -(317 + 205))==(3877 -(97 + 143))) and (v259==(960 -(105 + 855)))) then v143=1992 -(858 + 1134) ;v144=nil;v259=4 -3 ;end end end end break;end if ((v141==(0 -(0 + 0))) or ((3642 -(978 + (1532 -(474 + 819))))<=(3378 -(75 + 1337)))) then v142=0 -0 ;v143=nil;v141=1;end end end elseif (((3346 -1350)>=(1785 -(228 + 1466))) and (v86<=(14 -3))) then local v145=(3218 -(1324 + 502)) -(75 + 1317) ;local v146;while true do if (((3340 -(10 + 75))>(2187 -(723 + (2527 -(547 + 1110))))) and (v145==(333 -(308 + (65 -40))))) then v146=v85[273 -(204 + 67) ];v83[v146](v83[v146 + (4 -3) ]);break;end end elseif ((3179<=(858 + 25 + (4253 -1931))) and (v86==(11 + 1))) then local v199=1931 -(1020 + 911) ;local v200;local v201;local v202;local v203;while true do if (((3897 -((502 -334) + 73))>=((6246 -(268 + 618)) -2614)) and (v199==(2 -0))) then for v260=v200,v69 do local v261=0 + 0 ;local v262;local v263;while true do if (((1328 -755)<(1877 -((266 -91) + 535))) and (v261==1)) then while true do if ((v262==0) or ((329 + 63)>(654 + 4210))) then v263=0 -0 ;while true do if ((2484>2071) and ((923 -(586 + 337))==v263)) then v203=v203 + 1 ;v83[v260]=v201[v203];break;end end break;end end break;end if ((2221==(3231 -(918 + 92))) and (v261==(0 + 0))) then v262=0;v263=nil;v261=1;end end end break;end if ((v199==(860 -(490 + 370))) or ((1457 + 321)<=306)) then local v248=0;while true do if ((v248==(1276 -(542 + 733))) or (4325<(6010 -4798))) then v199=1;break;end if ((v248==(0 -(1866 -(1797 + 69)))) or ((1290 + 1203)<147)) then v200=v85[677 -(6 + 276 + 393) ];v201,v202=v80(v83[v200](v83[v200 + (1 -0) ]));v248=1;end end end if (((6176 -(27 + 1403))>=(335 + 1710)) and (v199==(1 + 0))) then v69=(v202 + v200) -1 ;v203=0 + 0 + 0 ;v199=2;end end else v83[v85[2]]={};end elseif ((v86<=(58 -(40 + 3))) or ((126 + 1613)==(470 + 1186))) then if ((4054>=224) and (v86==(44 -30))) then local v147=1721 -(1194 + 527) ;local v148;local v149;local v150;while true do if ((v147==(1118 -(806 + 312))) or ((3972 -(361 + 337))<=(382 + 687))) then v148=0 + 0 ;v149=nil;v147=2 -1 ;end if (((1 + 0)==v147) or ((5498 -1584)<(1331 + 368))) then v150=nil;while true do if (((14390 -10176)==(9888 -5674)) and (v148==(1 -0))) then for v278=1 + 0 , #v82 do local v279=0 -0 ;local v280;local v281;while true do if ((v279==(1843 -((1685 -748) + 905))) or ((1988 -(312 + 91))>=(3365 -(551 + 743)))) then while true do if ((4372>(2459 + 190)) and (v280==(0 + 0))) then v281=v82[v278];for v357=(0 -0) + 0 , #v281 do local v358=0;local v359;local v360;local v361;while true do if ((v358==0) or ((5027 -2558)<(1274 -(109 + 188)))) then v359=v281[v357];v360=v359[1 -0 ];v358=1 + 0 + 0 ;end if ((v358==(1 -0)) or ((891 + 241)==(4550 -(488 + 309)))) then v361=v359[2];if (((v360==v83) and (v361>=v149)) or ((271 + (1722 -(1379 + 242)))==(4149 -(1066 + 794)))) then local v389=0 + 0 ;local v390;while true do if (((11890 -8524)==(3754 -(193 + 195))) and ((0 -0)==v389)) then v390=0;while true do if ((3552>=(3366 -(1283 + 733))) and (v390==(1423 -(1298 + 125)))) then v150[v361]=v360[v361];v359[1]=v150;break;end end break;end end end break;end end end break;end end break;end if ((2049<(4336 -(915 + 587))) and (v279==(0 + (197 -(55 + 142))))) then v280=0;v281=nil;v279=1 -(0 + 0) ;end end end break;end if (((2834 -(873 + 815))<(2429 -(67 + 11))) and (v148==(0 + 0))) then local v264=0 -0 ;while true do if ((2963==2963) and (v264==(0 + 0))) then v149=v85[7 -5 ];v150={};v264=1 + 0 ;end if (((9222 -5166)<=4617) and (v264==(3 -2))) then v148=3 -2 ;break;end end end end break;end end else v83[v85[1760 -(112 + 1646) ]]=v85[3]~=(0 + 0) ;end elseif (((456 -167)<(1196 + 2994)) and (v86<=(317 -(3 + 4 + 294)))) then v64[v85[(1824 -(1779 + 42)) + 0 ]]=v83[v85[2 + 0 ]];elseif ((v86==(1 + 16)) or ((2847 -(1062 + 892))==(2376 -1562))) then if ((v85[3 -1 ]==v83[v85[1 + 3 ]]) or (((1073 + 243) -854)>(2688 + 125))) then v68=v68 + 1 + (1066 -(747 + 319)) ;else v68=v85[1 + 2 ];end else local v205=0 + 0 ;local v206;local v207;local v208;while true do if (((11181 -8477)<=4147) and (v205==(1 + 0))) then v208=nil;while true do if ((v206==(144 -(61 + 83))) or (3481<(2023 -1109))) then local v293=0 -0 ;local v294;while true do if (((1525 + 2589)>(3396 -(54 + 215))) and (v293==(0 + 0))) then v294=1043 -(880 + 163) ;while true do if ((v294==(1 + 0)) or ((4287 -(570 + 661))>=(15932 -12024))) then v206=1656 -((3238 -(350 + 1637)) + 404) ;break;end if (((190 + 386)==(573 + 3)) and (v294==(0 + 0))) then local v362=0 + 0 ;while true do if (((4551 -((2187 -1405) + 86))>(1806 -(61 + 621))) and (v362==(0 -0))) then v207=v85[7 -(54 -(37 + 12)) ];v208=v83[v207];v362=2 -1 ;end if ((v362==(890 -(213 + 676))) or ((639 + 594 + 2987)<=((9432 -6721) -(884 + 81 + 14)))) then v294=1;break;end end end end break;end end end if ((v206==(2 -1)) or ((685 + 1017)>=(1090 + 3343))) then for v306=v207 + (1363 -(287 + 1075)) ,v85[3] do v7(v208,v83[v306]);end break;end end break;end if ((v205==(0 + 0)) or (2276<1819)) then local v249=0;while true do if (((1628 -(616 + 151))<(3927 -(179 + 333))) and (v249==(627 -(98 + 529)))) then v206=(0 -0) -0 ;v207=nil;v249=1 + 0 ;end if ((v249==(290 -(272 + (47 -30)))) or (3788<(1476 -1115))) then v205=1;break;end end end end end elseif ((v86<=27) or ((331 + 720)>=(780 + 2625))) then if ((v86<=(8 + 14)) or (((7147 -4617) + 338)<(1739 -810))) then if (((733 + 718)<=(15445 -10547)) and (v86<=(1728 -(28 + 1680)))) then if ((v86==(33 -14)) or (2729<=(431 -(54 + 125)))) then if ( not v83[v85[2 + 0 ]] or ((2950 -(99 + 135))>=4723)) then v68=v68 + (3 -2) ;else v68=v85[1 + 2 ];end else local v154=0;local v155;local v156;local v157;local v158;while true do if ((669<=((3419 -(848 + 381)) -(218 + 286))) and (v154==0)) then v155=0 + 0 ;v156=nil;v154=1 + 0 ;end if ((v154==(3 -1)) or ((6861 -2624)<=1138)) then while true do if ((v155==(6 -4)) or ((4 + 350)>=(8915 -6737))) then for v282=1,v85[2 + 2 ] do local v283=1563 -(197 + 1366) ;local v284;local v285;while true do if ((v283==(0 -0)) or ((4098 -(6982 -5309))==(9309 -5962))) then v284=0;v285=nil;v283=1 + 0 ;end if ((v283==(3 -2)) or ((13105 -8285)<(257 + (5486 -1058)))) then while true do if (((331 -(29 + 302))==v284) or (180==(2893 + 655))) then local v347=909 -(428 + 481) ;while true do if (((8065 -4428)>=(2567 -(106 + 595))) and (v347==(1 + 0))) then v284=1 + 0 ;break;end if (((8820 -6746)==(3926 -1852)) and (v347==((0 -0) -0))) then v68=v68 + 1 + 0 ;v285=v77[v68];v347=1;end end end if (((259 + 3094)>=2722) and (v284==(2 -1))) then if (((6529 -(195 + 1611))>(3573 -(55 + 102))) and (v285[1]==(10 + 14))) then v158[v282-(1 + 0 + 0) ]={v83,v285[3]};else v158[v282-(1 -0) ]={v63,v285[1334 -(358 + 973) ]};end v82[ #v82 + (3 -2) ]=v158;break;end end break;end end end v83[v85[413 -(340 + 71) ]]=v30(v156,v157,v64);break;end if (((307 + 18)<=(1864 + 9)) and (v155==1)) then local v266=537 -((1267 -760) + 30) ;while true do if (((8384 -6382)>(1054 -((1332 -(427 + 290)) + 226))) and (v266==0)) then v158={};v157=v10({},{__index=function(v316,v317)local v318=(0 -0) -0 ;local v319;local v320;while true do if ((v318==(0 -0)) or ((2673 -(1805 + 7))>(16376 -12364))) then local v349=0 + 0 ;while true do if ((1487==(2742 -(878 + 84 + 293))) and (v349==(3 -2))) then v318=1123 -(746 + 376) ;break;end if ((v349==((0 -0) + 0)) or ((1762 -(200 + 107))<(88 + 343))) then v319=0 -(0 + 0) ;v320=nil;v349=2 -1 ;end end end if ((v318==(1 -0)) or ((4341 -(1614 + 315))>=(7045 -3751))) then while true do if (((3973 -(110 + 381))>=(1761 -999)) and ((1614 -(585 + 1029))==v319)) then local v376=0 -0 ;local v377;while true do if ((v376==(1206 -(1161 + 45))) or ((2283 + 1400)==(1844 -1135))) then v377=0 + 0 ;while true do if ((v377==0) or ((1148 + 1490)<=1925)) then v320=v158[v317];return v320[3 -2 ][v320[1 + 1 ]];end end break;end end end end break;end end end,__newindex=function(v321,v322,v323)local v324=(3120 -(938 + 924)) -(409 + 849) ;local v325;local v326;while true do if ((v324==(1 + 0)) or ((2021 -(963 + (123 -75)))>=(211 + 1061))) then while true do if (((3484 -(630 + 1313))==1541) and (v325==0)) then v326=v158[v322];v326[1 + (0 -0) ][v326[1622 -(158 + 464 + 21 + 977) ]]=v323;break;end end break;end if ((v324==0) or (469>=(2216 -(264 + 903)))) then v325=0 -0 ;v326=nil;v324=1 + (0 -0) ;end end end});v266=1 -0 ;end if ((v266==(1 + 0)) or ((5579 -3163)>(2274 + 1735))) then v155=8 -6 ;break;end end end if (((2556 + 552)>((1743 + 619) -(48 + 982))) and (v155==0)) then local v267=1238 -(1002 + 236) ;while true do if (((0 + 0)==v267) or ((1844 + 456)>4713)) then v156=v78[v85[1245 -(824 + 418) ]];v157=nil;v267=2 -1 ;end if ((v267==(595 -(545 + 49))) or ((2825 + 637)<(9394 -6777))) then v155=1120 -((221 -101) + 999) ;break;end end end end break;end if (((119 + (79 -42))<=4485) and (v154==((645 + 18) -(129 + 533)))) then v157=nil;v158=nil;v154=544 -(69 + 473) ;end end end elseif ((v86==(18 + (5 -2))) or ((19181 -15138)<(1556 + 1096))) then v83[v85[8 -6 ]]=v30(v78[v85[1 + 2 ]],nil,v64);else local v160=0 -(0 + 0) ;local v161;local v162;local v163;while true do if ((((11525 -7797) -2742)<(2495 -(1002 + 392))) and (v160==(0 -0))) then v161=0 + 0 ;v162=nil;v160=1 + 0 ;end if ((v160==(1108 -(461 + 646))) or ((7 + 3909)<=(3795 -1214))) then v163=nil;while true do if (((889 + 2089)==(156 + (4690 -1868))) and (v161==(1 + 0))) then for v286=v162 + 1 ,v85[16 -12 ] do v163=v163   .. v83[v286] ;end v83[v85[2]]=v163;break;end if ((v161==(0 + 0 + 0)) or ((3149 + 1263)<=(3727 -(1289 -(238 + 360))))) then local v269=(48 + 97) -(109 + 36) ;while true do if ((v269==(920 -(47 + 872))) or ((1958 -(203 + 43))<(534 + (2759 -(1078 + 918))))) then v161=1 + 0 ;break;end if ((((27061 -16404) -7758)>=(992 -(808 + 136))) and (v269==(0 + 0 + 0))) then v162=v85[572 -(460 + 109) ];v163=v83[v162];v269=1;end end end end break;end end end elseif ((v86<=(47 -23)) or (4650==3928)) then if ((2909>(4439 -(801 + 941))) and (v86>(62 -39))) then v83[v85[551 -(473 + 76) ]]=v83[v85[920 -(683 + 234) ]];else v83[v85[1 + 1 ]][v85[1596 -(1071 + 522) ]]=v83[v85[4 -0 ]];end elseif ((v86<=(58 -33)) or ((15317 -12122)<=((3335 -(92 + 63)) -((1592 -(106 + 358)) + 545)))) then local v168=0;local v169;local v170;local v171;local v172;while true do if (((762 + 3906)>=(2423 -(46 + 8))) and (v168==(1 -0))) then local v238=0 -0 ;while true do if (((274 + 2646)<=(5755 -(873 + 475))) and (v238==(1 + 0))) then v168=2;break;end if ((v238==(398 -(44 + 354))) or ((7156 -(19988 -15979))<(2275 -(122 + 213)))) then v69=(v171 + v169) -(2 -1) ;v172=0;v238=239 -(51 + 187) ;end end end if (((26 + 1925)<=(770 + (2298 -(52 + 629)))) and (v168==((0 -0) + 0))) then local v239=0;while true do if (((13855 -10150)>=(2799 + 433)) and (v239==(1 + 0))) then v168=2 -1 ;break;end if ((((8500 -4042) -(67 + 37 + (1484 -426)))==(9277 -5981)) and (v239==((2656 -(756 + 470)) -(860 + 570)))) then v169=v85[2 + 0 + 0 ];v170,v171=v80(v83[v169](v13(v83,v169 + (4 -3) ,v85[3])));v239=1;end end end if ((v168==(2 + 0)) or ((3710 -(1704 + 94))>=(550 + 2628))) then for v244=v169,v69 do local v245=0;local v246;while true do if ((0==v245) or ((3476 -((518 -(5 + 9)) + 271))<(3343 -(1285 + 365)))) then v246=0 + 0 ;while true do if ((v246==(0 + 0)) or ((5708 -(801 + 1193))<=498)) then v172=v172 + 1 ;v83[v244]=v170[v172];break;end end break;end end end break;end end elseif ((v86==26) or ((2221 -(74 + 97))>=(21386 -16686))) then local v210=0;local v211;local v212;local v213;local v214;while true do if ((2694>(170 + 305)) and (v210==(3 -1))) then while true do if (((3070 -(903 + 920))<(5539 -2959)) and (v211==((0 -0) + 0))) then local v295=0 + (0 -0) ;while true do if ((v295==(0 -0)) or ((16014 -11712)==(862 + 2102))) then v212=v85[4 -2 ];v213=v83[v212];v295=611 -(284 + 326) ;end if (((2535 -(739 + 266))<(3178 + 629)) and (v295==(1 + 0))) then v211=915 -(281 + 633) ;break;end end end if (((4644 -(189 + 506))==(4045 -(77 + 19))) and ((1 + 0)==v211)) then v214=v83[v212 + (5 -3) ];if ((4633==(3453 + 1180)) and (v214>0)) then if (((2851 + 656)>(4005 -928)) and (v213>v83[v212 + (1 -0) ])) then v68=v85[1278 -(608 + 199 + 468) ];else v83[v212 + 3 ]=v213;end elseif ((v213<v83[v212 + 1 + 0 ]) or ((3194 -(127 + 138))==(7485 -4405))) then v68=v85[3 + 0 ];else v83[v212 + 3 ]=v213;end break;end end break;end if (((1125 -(150 + 140 + 25))<=3062) and (v210==((0 + 0) -0))) then v211=0;v212=nil;v210=(1078 + 203) -(630 + 650) ;end if ((v210==(2 -1)) or (183>(3509 -2163))) then v213=nil;v214=nil;v210=4 -2 ;end end else v83[v85[1 + 1 ]]=v64[v85[3 + 0 ]];end elseif (((12396 -7585)==(5996 -(354 + 831))) and (v86<=(92 -60))) then if ((v86<=(13 + 16)) or ((9995 -(7793 -(635 + 858)))<=(3763 -2180))) then if ((v86==28) or (1715==(3607 -1924))) then for v191=v85[2],v85[3] do v83[v191]=nil;end else local v173=0;local v174;local v175;while true do if ((2187>(645 -228)) and (v173==(1 + (0 -0)))) then while true do if ((v174==(0 -0)) or ((1432 + 1852 + 879)<(1591 -(978 + 248)))) then v175=v85[6 -(1576 -(987 + 585)) ];v83[v175]=v83[v175](v13(v83,v175 + ((1081 -(558 + 520)) -2) ,v85[136 -(72 + (996 -(274 + 661))) ]));break;end end break;end if ((3503>(3062 -1817)) and ((1887 -(1639 + 248))==v173)) then v174=1166 -(730 + 436) ;v175=nil;v173=2 -1 ;end end end elseif ((((6180 -3567) -(125 + 256))<=(7339 -(3518 + 1084))) and (v86<=30)) then local v176=0 + 0 ;local v177;local v178;local v179;while true do if (((2 -(1736 -(1676 + 59)))==v176) or (4197>(3417 + 838))) then v179=nil;while true do if ((v177==0) or ((764 + 933 + 139)>=(4451 -(439 + 626)))) then local v273=(0 + 0) -0 ;while true do if (((14358 -9876)<4652) and (v273==((942 -(739 + 202)) + 0))) then v177=4 -3 ;break;end if ((v273==(0 -0)) or ((2359 + 674 + 154)==1356)) then v178=0 -0 ;v179=nil;v273=1;end end end if ((v177==(1 + 0)) or ((8503 -4716)==(884 -506))) then while true do if (((1302 + 2664)==(4869 -(845 + 58 + 0))) and (v178==(0 + 0 + 0))) then v179=v85[2 + 0 ];v83[v179]=v83[v179](v13(v83,v179 + 1 + 0 ,v69));break;end end break;end end break;end if ((v176==(0 + 0)) or (((11133 -(896 + 95)) -6400)==(3252 -(1164 + 455)))) then v177=0 + 0 ;v178=nil;v176=1;end end elseif (((1957 + 1933)>=1092) and (v86==(666 -(293 + 342)))) then do return;end elseif ((353<3183) and (v83[v85[5 -3 ]]==v85[13 -9 ])) then v68=v68 + (1 -0) ;else v68=v85[1450 -(1048 + 399) ];end elseif (((2776 + 1403)>=(4579 -(681 + 687))) and (v86<=(121 -87))) then if ((2427<3064) and (v86==(31 + 2))) then local v180=v85[2];local v181=v85[4];local v182=v180 + 2 + 0 ;local v183={v83[v180](v83[v180 + 1 + 0 ],v83[v182])};for v193=425 -(404 + 20) ,v181 do v83[v182 + v193 ]=v183[v193];end local v184=v183[(3297 -1761) -((1566 -671) + 640) ];if (v184 or ((940 + 1486)<=452)) then local v217=(6320 -4647) -(477 + 1196) ;local v218;local v219;while true do if ((2299==(4365 -(1541 + 525))) and (v217==(1 + 0))) then while true do if ((v218==(0 -0)) or ((453 + 13)>=(5565 -(300 + (1192 -787))))) then v219=0;while true do if ((((2637 -(105 + 745)) -(395 + 38))>=1218) and (v219==(0 -0))) then v83[v182]=v184;v68=v85[2 + 1 ];break;end end break;end end break;end if ((v217==((0 + 0) -0)) or ((2758 -989)==(2830 -(681 + 459)))) then v218=0 -0 ;v219=nil;v217=3 -2 ;end end else v68=v68 + 1 + 0 ;end else local v185=1614 -(99 + 1515) ;local v186;while true do if ((v185==(1354 -(893 + 461))) or (3147<(1558 -(419 + 103)))) then v186=v85[2 + (0 -0) ];v83[v186]=v83[v186](v83[v186 + 1 + 0 ]);break;end end end elseif ((v86<=(57 -22)) or (4012<3026)) then local v187=1570 -(107 + 1463) ;local v188;local v189;local v190;while true do if ((v187==(1 -(0 + 0))) or ((999 + 760)<712)) then v190=nil;while true do if (((797 -(43 + 754))==v188) or ((4219 -1263)<960)) then local v274=0;while true do if (((0 -0)==v274) or ((691 -(85 + 450))>(5286 -(178 + 165)))) then v189=0 -0 ;v190=nil;v274=1 + 0 ;end if (((1974 -(200 + 1077))==(2531 -1834)) and (v274==(1 + 0))) then v188=1 + (800 -(452 + 348)) ;break;end end end if (((4842 -(303 + 861))<=(1217 + 3184)) and (v188==(1360 -(129 + 1230)))) then while true do if ((((4851 -2590) + 400)>=(7 + 310)) and (v189==(0 -0))) then v190=v85[605 -(191 + 412) ];v83[v190]=v83[v190]();break;end end break;end end break;end if ((v187==(0 + 0)) or ((9776 -6655)<(3599 -(1930 + 786)))) then v188=0 + 0 ;v189=nil;v187=1 + 0 ;end end elseif (((3930 -(518 + 1417))<3660) and (v86==(75 -(601 -(399 + 163))))) then local v220=0 -0 ;local v221;local v222;local v223;local v224;local v225;while true do if (((1307 -(624 + 532))<171) and (v220==(3 -2))) then v223=nil;v224=nil;v220=1460 -(949 + 509) ;end if ((168<(1616 -826)) and (v220==2)) then v225=nil;while true do if ((v221==(1 + 0)) or ((2552 -(326 + 25))>=4864)) then local v297=1662 -(646 + 1016) ;while true do if ((v297==(2 -1)) or ((18 + 2075)<=(596 + (1737 -(893 + 783))))) then v221=2 + 0 ;break;end if (((1538 -(1374 + 164))==v297) or (478<429)) then v224=nil;v225=nil;v297=1;end end end if ((v221==(0 + 0)) or ((2755 -(2338 -(440 + 739)))>(4562 + 121))) then local v298=374 -(103 + 271) ;while true do if ((v298==(0 + 0)) or ((2948 -1769)==1117)) then v222=0 -(0 + 0) ;v223=nil;v298=3 -2 ;end if ((258<=(3818 -(1239 + 459))) and (v298==(1322 -(847 + 474)))) then v221=1;break;end end end if ((v221==2) or ((5619 -(738 + 25 + 1176))<(2094 -(215 + 1724)))) then while true do if ((v222==(1542 -(353 + (2729 -1540)))) or ((1456 -(227 + 103))>=(2954 + (2038 -861)))) then local v335=0 + 0 ;while true do if ((v335==(242 -(137 + 104))) or ((227 + 876)>=(3860 -1681))) then v222=2 -1 ;break;end if (((15095 -11194)==3901) and ((0 -0)==v335)) then local v363=0;while true do if ((v363==(1 + 0)) or ((694 + 1693)>=(3042 + 77))) then v335=1;break;end if ((v363==(913 -(474 + 439))) or ((570 + 538)>=2897)) then v223=v85[2];v224=v83[v223 + 1 + (2 -1) ];v363=(610 + 588) -(479 + 718) ;end end end end end if (((2143 -(13 + (1640 -(133 + 1334))))>=(1382 -(277 + 711))) and (v222==(3 -1))) then if ((v224>(0 -0)) or ((3883 -(192 + 1033))==(6022 -3743))) then if ((v225<=v83[v223 + 1 ]) or (4495<3838)) then local v369=0 -0 ;local v370;while true do if ((v369==(0 -(0 + 0))) or (1507>=(3830 -1509))) then v370=0 + 0 ;while true do if (((3025 -1518)==(6122 -4615)) and (v370==(0 -(0 -0)))) then v68=v85[4 -1 ];v83[v223 + (8 -5) ]=v225;break;end end break;end end end elseif ((3790==(8636 -(5212 -(240 + 126)))) and (v225>=v83[v223 + 1 + 0 ])) then local v371=1048 -(656 + 392) ;local v372;while true do if ((v371==(0 + 0)) or ((652 + 2535)<(456 + 541))) then v372=(0 -0) + 0 ;while true do if ((1246<=(2819 -(123 + 477))) and (v372==0)) then v68=v85[3];v83[v223 + (1233 -(295 + 935)) ]=v225;break;end end break;end end end break;end if (((251 -(132 + 102 + 16))==v222) or ((332 + 32)>3155)) then local v336=0 -0 ;local v337;while true do if (((1033 + (6708 -3144))>(3432 -(459 + 131))) and (v336==(0 -0))) then v337=0 + 0 ;while true do if (((3325 -(332 + 887))<3493) and (v337==(909 -(286 + 622)))) then v222=1668 -(195 + 1471) ;break;end if ((v337==(1904 -(1368 + 536))) or ((1954 -(890 + 1050))==(5008 -(357 + (1998 -(710 + 564)))))) then local v387=0 + (1118 -(706 + 412)) ;while true do if (((221 + 32)<=1365) and (v387==(1850 -(823 + 1026)))) then v337=1;break;end if (((145 + (6040 -3501))>(2609 -1961)) and (v387==0)) then v225=v83[v223] + v224 ;v83[v223]=v225;v387=(1 -0) -0 ;end end end end break;end end end end break;end end break;end if (((1266 + (557 -419))<=3614) and (v220==(0 + 0))) then v221=625 -(585 + 40) ;v222=nil;v220=1;end end else local v226=(0 -0) -0 ;local v227;local v228;while true do if ((((52 -38) + 104)==(75 + 43)) and (v226==1)) then while true do if ((v227==(0 + 0)) or ((17427 -12676)<(11328 -7153))) then v228=v85[217 -(201 + 14) ];v83[v228](v13(v83,v228 + 1 + 0 ,v85[896 -(521 + 372) ]));break;end end break;end if (((4135 -(162 + 6))>(4586 -(258 + (830 -(374 + 49))))) and (v226==(0 + 0))) then v227=1773 -(1410 + 151 + 212) ;v228=nil;v226=1148 -(503 + 644) ;end end end v68=v68 + (1467 -(1263 + 203)) ;break;end end end end A,B=v28(v11(v72));if  not A[1] then local v89=v62[4][v68] or "?" ;error("Script error at ["   .. v89   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end end end v15("LOL!",v9(),...);end
